/*
 * Este software foi desenvolvido e criado por Rodrigo Attique Santana,
 * todos os algoritimos presentes aqui são de altoria do desenvolvedor, não sendo permitido
 * cópia ou distribuição sem o consentimento do mesmo.
 * É proibido vender, modificar, distribuir sem autorização.
 * copyright Attique Tecnologia.
 */
package views.usuarios;

import models.usuarios.CasoUso;
import models.usuarios.Permissao;
import java.util.Arrays;
import javax.swing.JOptionPane;
import models.interfaces.DefaultFormCadastro;
import utils.Log;
import models.usuarios.PermissaoUsuario;
import utils.ShowMessage;
import models.usuarios.Usuario;
import javax.swing.DefaultListModel;
import static models.usuarios.Permissao.CRIAR;
import persistence.UsuarioBO;
import models.usuarios.Sessao;

/**
 *
 * @author Rodrigo
 */
public class FrmCadastroUsuario extends javax.swing.JDialog 
    implements DefaultFormCadastro {

    private Usuario usuario;
    private boolean IS_EDITAR = false;
    /**
     * Creates new form FrmCadastroUsuario
     */
    public FrmCadastroUsuario(java.awt.Frame parent, boolean modal) {
        //ANTES DE ENTRAR VERIFICA LOGIN
        super(parent, modal);
        if (Sessao.getInstance().getUsuario() == null){
            FrmLogin login = new FrmLogin(null, true);
            login.setVisible(true);
            if (!login.IS_LOGGED() && !login.IS_OPERADOR()){
                System.exit(0);
            }
            else {
                usuario = Sessao.getInstance().getUsuario();
            }
        } 
            
        initComponents();
        //usuario = new Usuario("");//usuário em branco para identificar novos usuários
        setLocationRelativeTo(this);
        carregarCasoUso();
        verPermissao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnConfirmar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        chbAtivo = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        txtLogin = new javax.swing.JTextField();
        txtSenha1 = new javax.swing.JPasswordField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtSenha2 = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        cmbNivel = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtNotas = new javax.swing.JEditorPane();
        jLabel6 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstCasoUso = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        chbVer = new javax.swing.JCheckBox();
        chbEditar = new javax.swing.JCheckBox();
        chbCriar = new javax.swing.JCheckBox();
        chbExcluir = new javax.swing.JCheckBox();
        btnAlterarSenha = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Usuários");

        btnConfirmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/24x24/Save.png"))); // NOI18N
        btnConfirmar.setText("Confirmar");
        btnConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/24x24/Exit.png"))); // NOI18N
        btnCancelar.setText("Fechar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        chbAtivo.setSelected(true);
        chbAtivo.setText("Ativo");

        jLabel2.setText("Login");

        txtLogin.setAutoscrolls(false);

        txtSenha1.setAutoscrolls(false);

        jLabel3.setText("Senha");

        jLabel4.setText("Confirmar");

        txtSenha2.setAutoscrolls(false);

        jLabel5.setText("Nível");

        cmbNivel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ADMINISTRADOR", "OPERADOR", "INSTRUTOR" }));
        cmbNivel.setSelectedIndex(1);
        cmbNivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNivelActionPerformed(evt);
            }
        });

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Notas"));

        txtNotas.setAutoscrolls(false);
        jScrollPane1.setViewportView(txtNotas);

        jLabel6.setText("Email");

        txtEmail.setAutoscrolls(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(chbAtivo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSenha2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtSenha1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtLogin)
                            .addComponent(cmbNivel, 0, 258, Short.MAX_VALUE)
                            .addComponent(txtEmail))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chbAtivo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSenha1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSenha2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbNivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Geral", jPanel1);

        lstCasoUso.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lstCasoUso.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                lstCasoUsoPropertyChange(evt);
            }
        });
        lstCasoUso.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCasoUsoValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstCasoUso);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Propriedade"));

        chbVer.setText("VER");
        chbVer.setToolTipText("Permite Visualizar e Imprimir");
        chbVer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbVerActionPerformed(evt);
            }
        });

        chbEditar.setText("EDITAR");
        chbEditar.setToolTipText("Permite fazer alterações nos registros");
        chbEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbEditarActionPerformed(evt);
            }
        });

        chbCriar.setText("CRIAR");
        chbCriar.setToolTipText("Permite adicionar novos registros");
        chbCriar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbCriarActionPerformed(evt);
            }
        });

        chbExcluir.setText("EXCLUIR");
        chbExcluir.setToolTipText("Permite excluir registros");
        chbExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chbExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(chbVer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbEditar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbCriar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chbExcluir)
                .addContainerGap(69, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chbCriar)
                    .addComponent(chbVer)
                    .addComponent(chbEditar)
                    .addComponent(chbExcluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3)
                .addContainerGap())
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 284, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Permissões", jPanel2);

        btnAlterarSenha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/24x24/Key.png"))); // NOI18N
        btnAlterarSenha.setText("Alterar Senha");
        btnAlterarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlterarSenhaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnConfirmar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlterarSenha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelar))
                    .addComponent(jTabbedPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnConfirmar)
                    .addComponent(btnCancelar)
                    .addComponent(btnAlterarSenha))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        fechar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmarActionPerformed
        // TODO add your handling code here:
        salvar();
    }//GEN-LAST:event_btnConfirmarActionPerformed

    private void cmbNivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNivelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbNivelActionPerformed

    private void btnAlterarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlterarSenhaActionPerformed
        // TODO add your handling code here:
        FrmAlterarSenha fas = new FrmAlterarSenha(null, true);
        fas.setUsuario(usuario);
        fas.setVisible(true);
    }//GEN-LAST:event_btnAlterarSenhaActionPerformed

    private void lstCasoUsoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_lstCasoUsoPropertyChange
//        System.out.println(lstCasoUso.getSelectedValue());
    }//GEN-LAST:event_lstCasoUsoPropertyChange

    private void lstCasoUsoValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCasoUsoValueChanged
        //seta a permissão que o usuário tem
        setPermissao(CasoUso.valueOf(lstCasoUso.getSelectedValue().toString()));
        System.out.println(lstCasoUso.getSelectedValue());
    }//GEN-LAST:event_lstCasoUsoValueChanged

    private void chbVerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbVerActionPerformed
        //se ativar o combobox apenas adiciona mais uma permissão
        //se desativar excluir
        PermissaoUsuario permissao = new PermissaoUsuario(usuario
                , CasoUso.valueOf(lstCasoUso.getSelectedValue().toString())
                , Permissao.LER);
        if (chbVer.isSelected()){
            usuario.addPermissao(permissao);
        } else
            usuario.removePermissao(permissao);
        
    }//GEN-LAST:event_chbVerActionPerformed

    private void chbEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbEditarActionPerformed
        //se ativar o combobox apenas adiciona mais uma permissão
        //se desativar excluir
        PermissaoUsuario permissao = new PermissaoUsuario(usuario
                , CasoUso.valueOf(lstCasoUso.getSelectedValue().toString())
                , Permissao.EDITAR);
        if (chbEditar.isSelected()){
            usuario.addPermissao(permissao);
        } else
            usuario.removePermissao(permissao);
    }//GEN-LAST:event_chbEditarActionPerformed

    private void chbCriarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbCriarActionPerformed
        //se ativar o combobox apenas adiciona mais uma permissão
        //se desativar excluir
        PermissaoUsuario permissao = new PermissaoUsuario(usuario
                , CasoUso.valueOf(lstCasoUso.getSelectedValue().toString())
                , Permissao.CRIAR);
        if (chbCriar.isSelected()){
            usuario.addPermissao(permissao);
        } else
            usuario.removePermissao(permissao);
    }//GEN-LAST:event_chbCriarActionPerformed

    private void chbExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chbExcluirActionPerformed
        //se ativar o combobox apenas adiciona mais uma permissão
        //se desativar excluir
        PermissaoUsuario permissao = new PermissaoUsuario(usuario
                , CasoUso.valueOf(lstCasoUso.getSelectedValue().toString())
                , Permissao.EXCLUIR);
        if (chbExcluir.isSelected()){
            usuario.addPermissao(permissao);
        } else
            usuario.removePermissao(permissao);
    }//GEN-LAST:event_chbExcluirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows Classic look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows Classic (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows Classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmCadastroUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmCadastroUsuario dialog = new FrmCadastroUsuario(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAlterarSenha;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnConfirmar;
    private javax.swing.JCheckBox chbAtivo;
    private javax.swing.JCheckBox chbCriar;
    private javax.swing.JCheckBox chbEditar;
    private javax.swing.JCheckBox chbExcluir;
    private javax.swing.JCheckBox chbVer;
    private javax.swing.JComboBox cmbNivel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JList lstCasoUso;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtLogin;
    private javax.swing.JEditorPane txtNotas;
    private javax.swing.JPasswordField txtSenha1;
    private javax.swing.JPasswordField txtSenha2;
    // End of variables declaration//GEN-END:variables

    @Override
    public Object[] getDataForm() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setDataForm(Object objeto) {
        usuario = (Usuario)objeto;
        //setando os dados no form
        chbAtivo.setSelected(usuario.isAtivo());
        txtLogin.setText(usuario.getLogin());
        txtEmail.setText(usuario.getEmail());
        // NOTAS A SENHA ELE DEVE ALTERAR COM O BOTÃO DE ALTERAR SENHA
        txtNotas.setText(usuario.getNotas());
        carregarCasoUso();
    }

    /**
     * Salvar direto no BO sem usar um constroller e o getDataForm
     */
    @Override
    public void salvar() {
        //Usuário temporário para capturar do form
        
        UsuarioBO udao = new UsuarioBO();
        
        char[] senha1 = txtSenha1.getPassword();
        char[] senha2 = txtSenha2.getPassword();
        String senha = "";       
        /* verifica senhas, se são iguais*/
        if (!Arrays.toString(senha1).equals(Arrays.toString(senha2))){
            JOptionPane.showMessageDialog(rootPane, "As senhas não conferem"+Arrays.toString(senha1));
            return; //quebra a ação para evitar erros
        } else {//se elas forem iguais adiciona em uma string
            
            for (char s : senha1){
                senha += s; //string que recebe a senha.
            }
            
            //fim captura de dados
        }//fim se senha iguais
        
        /** Captura dados do form para usuárioi temporário */
        usuario.setAtivo(chbAtivo.isSelected());
        usuario.setLogin(txtLogin.getText());
        usuario.setEmail(txtEmail.getText());
        usuario.setNotas(txtNotas.getText());
        //  TENTA SALVAR OU ALTERAR
        
        if (IS_EDITAR){
            
            try {
                System.out.println("fazendo update...");
                if (udao.update(usuario)){
                    ShowMessage.informationMessage(String.format("O usuario %s foi atualizado!", usuario.getLogin()));
                    dispose();
                }
            } catch (Exception ex) {
                Log.log(FrmCadastroUsuario.class.getName(), ex);
            }//fim catch//fim catch
            
        } else {
            usuario.setSenha(senha);//só captura senha se for novo usuário
            try {
                if (udao.save(usuario)){
                    ShowMessage.informationMessage(String.format("O usuario %s foi inserido!", usuario.getLogin()));
                    dispose();
                }
            } catch (Exception ex) {
                Log.log(FrmCadastroUsuario.class.getName(), ex);
            }//fim catch//fim catch
        }
    }//fim salvar()

    @Override
    public void novo() {
        //zerando o form
        IS_EDITAR = false;
        chbAtivo.setSelected(true);
        txtLogin.setText(null);
        txtSenha1.setText(null);
        txtSenha2.setText(null);
        txtNotas.setText(null);
        usuario = new Usuario();
    }

    @Override
    public void fechar() {
        dispose();
    }

    public Usuario getUsuario() {
        return usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
        setDataForm(usuario);
    }

    /**
     * Carrega todos os casos de uso independente de haver permissão ou não
     */
    private void carregarCasoUso() {
        
        DefaultListModel dlm = new DefaultListModel();
        for (CasoUso caso : CasoUso.values()){
            dlm.addElement(caso);
        }
        lstCasoUso.setModel(dlm);
    }

    public void setEditar(Usuario usuario) {
        IS_EDITAR = true;
        setDataForm(usuario);
    }

    private void setPermissao(CasoUso casouso) {
        //passa essa permissão para as do usuário
        //resgata uma lista com todoas as permissões
        
        //ZERA TODO MUNDO E COMEÇA DE NOVO
        chbVer.setSelected(false);
        chbEditar.setSelected(false);
        chbExcluir.setSelected(false);
        chbCriar.setSelected(false);

        
        //faz um loop para saber quem existe ou não
        //se existir marca o checkbox
        for (Permissao per : usuario.getPermissaos(casouso)){
            
            switch(per){
                case CRIAR: chbCriar.setSelected(true); break;
                case EXCLUIR: chbExcluir.setSelected(true); break;
                case EDITAR: chbEditar.setSelected(true); break;
                case LER: chbVer.setSelected(true); break;
            }
        }
    }//fim set permissao
    
    /**
     * Este método é essencial em todos os forms do sistema pois é ele quem garante o acesso
     * ao sistema.
     */
    private void verPermissao() {
        //nota este não é o usuário que está sendo modificado
        // mas, sim o usuário que está logado no sistema
        Usuario usuario = Sessao.getInstance().getUsuario();
        
        enabledButtons(false);
        
        if (usuario.isAllowed(CasoUso.MANUTENCAO_USUARIOS))
        {
            for (Permissao permissao : usuario.getPermissaos(CasoUso.MANUTENCAO_USUARIOS))
            {
                switch(permissao){
                    case LER:
                        btnAlterarSenha.setEnabled(true);
                        break;
                    case CRIAR: 
                        btnConfirmar.setEnabled(true);
                        chbCriar.setEnabled(true);
                        chbVer.setEnabled(true);
                        chbEditar.setEnabled(true);
                        chbExcluir.setEnabled(true);
                        break;
                    case EDITAR: 
                        enabledButtons(true);
                        break;
                    case EXCLUIR: //ver e editar
                        break;
                    default: 
                        ShowMessage.warningMessage("Você não possui permissão para esta área!");
                        dispose();
                        break;
                }//fim switch
            }//fim do for
        } else {
            ShowMessage.warningMessage("Você não possui permissão para esta área!");
            dispose();
        }
    }//fim verPermissoes
    
    private void enabledButtons(boolean bool){
        btnConfirmar.setEnabled(bool);
        btnAlterarSenha.setEnabled(bool);
        chbCriar.setEnabled(bool);
        chbVer.setEnabled(bool);
        chbEditar.setEnabled(bool);
        chbExcluir.setEnabled(bool);
    }

    @Override
    public void editar() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void excluir() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void localizar() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void enableControls(boolean bool) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void enableForm(boolean bool) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}//fim classe
