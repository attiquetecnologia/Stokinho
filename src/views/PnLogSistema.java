/*
 * Este software foi desenvolvido e criado por Rodrigo Attique Santana,
 * todos os algoritimos presentes aqui são de altoria do desenvolvedor, não sendo permitido
 * cópia ou distribuição sem o consentimento do mesmo.
 * É proibido vender, modificar, distribuir sem autorização.
 * copyright Attique Tecnologia.
 */
package views;

import controllers.UsuarioController;
import java.awt.print.PrinterException;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import models.logs.LogAcao;
import persistence.LogAcaoDAO;
import utils.DataDefault;
import utils.Log;

/**
 *
 * @author Rodrigo
 */
public class PnLogSistema extends javax.swing.JPanel {
    private List<LogAcao> logs;
    private LogAcaoDAO ldao;
    private UsuarioController uController;

    /**
     * Creates new form PnLogSistema
     */
    public PnLogSistema() {
        ldao = new LogAcaoDAO();
        
        uController = new UsuarioController();
        
        initComponents();
        
        //setando a data de uma semana a outra
        Calendar cl = Calendar.getInstance();
        cl.add(Calendar.DAY_OF_MONTH, -1);
        dtcDe.setDate(cl.getTime());
        dtcAte.setDate(new Date());
        
        
        DefaultComboBoxModel dtm =(DefaultComboBoxModel)cmbUsuarios.getModel();
        dtm.addElement("Todos");
        try {
            for (Iterator it = uController.findLogins().iterator(); it.hasNext();) {
                String u = (String) it.next();
                dtm.addElement(u);
            }
        } catch (Exception ex) {
            Log.log(PnLogSistema.class.getName(), ex);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblResultado = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        dtcDe = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        dtcAte = new com.toedter.calendar.JDateChooser();
        btnPesquisar = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        cmbUsuarios = new javax.swing.JComboBox();

        tblResultado.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblResultado.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblResultado.setRowHeight(22);
        jScrollPane1.setViewportView(tblResultado);

        jLabel1.setText("De:");

        dtcDe.setDate(new Date());
        dtcDe.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dtcDePropertyChange(evt);
            }
        });

        jLabel2.setText("até");

        dtcAte.setDate(new Date());
        dtcAte.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dtcAtePropertyChange(evt);
            }
        });

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Find.png"))); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        lblTotal.setText("Total de resultados");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/print.png"))); // NOI18N
        jButton1.setText("Imprimir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Save.png"))); // NOI18N
        jButton2.setText("Salvar em Arquivo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtcDe, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtcAte, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbUsuarios, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap(117, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(dtcDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(dtcAte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnPesquisar)
                        .addComponent(jButton1)
                        .addComponent(jButton2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTotal)
                    .addComponent(cmbUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        search();
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void dtcDePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dtcDePropertyChange
        if ("date".equals(evt.getPropertyName())){
            search();
        }
    }//GEN-LAST:event_dtcDePropertyChange

    private void dtcAtePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dtcAtePropertyChange
        if ("date".equals(evt.getPropertyName())){
            search();
        }
    }//GEN-LAST:event_dtcAtePropertyChange

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            tblResultado.print();
        } catch (PrinterException ex) {
            Logger.getLogger(PnLogSistema.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int aprove = fileChooser.showSaveDialog(this);
        if (JFileChooser.APPROVE_OPTION == aprove){
            try {
                PrintWriter pw = new PrintWriter(fileChooser.getSelectedFile());
                for (Iterator<LogAcao> it = ldao.findAll(dtcDe.getDate(), dtcAte.getDate(), uController.findLogins()).iterator(); it.hasNext();) {
                    LogAcao log = it.next();
                    pw.println(log.getID() 
                            + " " + DataDefault.parseDataHoraBR(log.getDataAcao())
                            + " " + log.getUsuario()
                            + " " + log.getIpAddress()
                            + " " + log.getHostName()
                            + " " + log.getAcao()
                    );
                }
                pw.flush();
                pw.close();
            } catch (IOException ex) {
                Logger.getLogger(PnLogSistema.class.getName()).log(Level.SEVERE, null, ex);
            }   
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JComboBox cmbUsuarios;
    private com.toedter.calendar.JDateChooser dtcAte;
    private com.toedter.calendar.JDateChooser dtcDe;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblResultado;
    // End of variables declaration//GEN-END:variables

    private void search() {
        
        DefaultTableModel dtm  = new DefaultTableModel();
        dtm.addColumn("ID");
        dtm.addColumn("Data de Ocorrencia");
        dtm.addColumn("Usuário");
        dtm.addColumn("IP host");
        dtm.addColumn("Hostname");
        dtm.addColumn("Evento");
        List<String> logins = new ArrayList<>();
       
        if (cmbUsuarios.getSelectedIndex() > 0)
            logins.add(cmbUsuarios.getSelectedItem().toString());
        else logins.addAll(uController.findLogins());
            logs = (List<LogAcao>) ldao.findAll(dtcDe.getDate(), dtcAte.getDate(), logins);
        for (LogAcao log : logs) {
            dtm.addRow(new Object[]{
                log.getID()
                    ,DataDefault.parseDataHoraBR(log.getDataAcao())
                    ,log.getUsuario()
                    ,log.getIpAddress()
                    ,log.getHostName()
                    ,log.getAcao()
            });
        }
        tblResultado.setModel(dtm);
        int sizes[] = new int[]{100,150,100,120,120,500};
        for (int i =0 ;i< 6;i++){
            tblResultado.getColumnModel().getColumn(i).setPreferredWidth(sizes[i]);
        }
        lblTotal.setText("Total de resultados: " + logs.size());
        
    }//fim search
}//fim classe