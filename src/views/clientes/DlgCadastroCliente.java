/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package views.clientes;

import br.attique.relatorios.Relatorio;
import controllers.EnderecoController;
import controllers.ClienteController;
import controllers.PessoaController;
import java.awt.Desktop;
import java.awt.Frame;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.channels.FileChannel;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import models.Configuracoes;
import models.Endereco;
import models.Cliente;
import models.Pessoa;
import models.enuns.Comparadores;
import models.enuns.Estados;
import models.interfaces.DefaultComponent;
import models.interfaces.DefaultFormCadastro;

import models.usuarios.CasoUso;
import models.usuarios.Permissao;
import models.usuarios.Sessao;
import models.usuarios.Usuario;
import persistence.TextFile;
import persistence.jdbc.Conexao;
import utils.Log;
import utils.ShowMessage;
import views.enderecos.FrmPesquisaEndereco;



/**
 *
 * @author rodrigo
 */
public class DlgCadastroCliente extends javax.swing.JDialog 
 implements DefaultFormCadastro, DefaultComponent {
    
    private Cliente paciente;
    private boolean IS_EDITAR = false;
    private ClienteController controller = new ClienteController();
    private Endereco endereco;
    /**Encontra o caminho absoluto*/
    private static String pathAbsoluto = TextFile.getINSTANCE().getPathAbsoluto();

    private String pathRelativo;
    
    public DlgCadastroCliente(Frame parent, boolean modal){
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        setTitle("Cadastro de Clientes");
        
                
        IS_EDITAR = false;
        controller = new ClienteController();
        paciente = new Cliente();
        pathRelativo = new Configuracoes().getPathDocumentos() + "/clientes/";
        enableForm(false);
        enableControls(false);
        btnNovo.setEnabled(true);
        btnLocalizar.setEnabled(true);
        loadEstados();
        
        verPermissao();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel9 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        txtSite = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtaOutros = new javax.swing.JTextArea();
        txtTelefone = new javax.swing.JFormattedTextField();
        txtCelular = new javax.swing.JFormattedTextField();
        jPanel10 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        txtLogradouro = new javax.swing.JTextField();
        txtBairro = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        btnPesquisaCEP = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        txtCep = new javax.swing.JFormattedTextField();
        cmbEstado = new javax.swing.JComboBox();
        jPanel8 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtCPF = new javax.swing.JTextField();
        txtRG = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txtProfissao = new javax.swing.JTextField();
        chbAtivo = new javax.swing.JCheckBox();
        jLabel28 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        dtcNascimento = new com.toedter.calendar.JDateChooser();
        dtcDataCadastro = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        lblFoto = new javax.swing.JLabel();
        btnAddFoto = new javax.swing.JButton();
        btnRemFoto = new javax.swing.JButton();
        btnPreview = new javax.swing.JButton();
        jToolBar1 = new javax.swing.JToolBar();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnLocalizar = new javax.swing.JButton();
        btnFicha = new javax.swing.JButton();
        btnCancelarAcao = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Contatos"));

        jLabel32.setBackground(java.awt.Color.blue);
        jLabel32.setText("Celular:");

        jLabel33.setBackground(java.awt.Color.blue);
        jLabel33.setText("Email:");

        jLabel34.setBackground(java.awt.Color.blue);
        jLabel34.setText("Site:");

        txtSite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSiteActionPerformed(evt);
            }
        });

        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });

        jLabel35.setBackground(java.awt.Color.blue);
        jLabel35.setText("Telefone:");

        txtaOutros.setColumns(20);
        txtaOutros.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        txtaOutros.setRows(5);
        txtaOutros.setBorder(javax.swing.BorderFactory.createTitledBorder("Outros"));
        jScrollPane5.setViewportView(txtaOutros);

        try {
            txtTelefone.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)####.####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtTelefone.setToolTipText("Data de Cadastro no sistema");

        try {
            txtCelular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("(##)# ####.####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCelular.setToolTipText("Data de Cadastro no sistema");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel34)
                            .addComponent(jLabel33))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSite, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(txtEmail))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel32)
                            .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5)))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(txtSite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34)
                    .addComponent(txtCelular, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Endereço"));

        jLabel37.setText("Logradouro:");

        jLabel39.setText("Bairro:");

        jLabel40.setText("CEP:");

        txtLogradouro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLogradouroActionPerformed(evt);
            }
        });

        txtBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBairroActionPerformed(evt);
            }
        });

        jLabel41.setText("Cidade:");

        txtCidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCidadeActionPerformed(evt);
            }
        });

        jLabel42.setText("UF:");

        btnPesquisaCEP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Search.png"))); // NOI18N
        btnPesquisaCEP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaCEPActionPerformed(evt);
            }
        });

        jLabel38.setText("Nº");

        try {
            txtCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        cmbEstado.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "SP" }));
        cmbEstado.setSelectedItem(Estados.values());

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37)
                            .addComponent(jLabel40))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLogradouro)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPesquisaCEP)))
                        .addGap(7, 7, 7)
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel41)
                            .addComponent(jLabel39))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(txtCidade, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel42)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtBairro))))
                .addGap(5, 5, 5))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel40)
                        .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnPesquisaCEP, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(txtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel38)
                    .addComponent(txtNumero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42)
                    .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações Gerais"));

        jLabel22.setBackground(java.awt.Color.blue);
        jLabel22.setText("Nome Completo:");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });

        jLabel27.setBackground(java.awt.Color.blue);
        jLabel27.setText("CPF:");

        txtCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCPFActionPerformed(evt);
            }
        });
        txtCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCPFKeyReleased(evt);
            }
        });

        txtRG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRGActionPerformed(evt);
            }
        });

        jLabel29.setBackground(java.awt.Color.blue);
        jLabel29.setText("RG:");

        jLabel26.setBackground(java.awt.Color.blue);
        jLabel26.setText("Profissao:");

        chbAtivo.setSelected(true);
        chbAtivo.setText("Ativo");
        chbAtivo.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel28.setBackground(java.awt.Color.blue);
        jLabel28.setText("Nasc.:");

        jLabel30.setBackground(java.awt.Color.blue);
        jLabel30.setText("Data de Cadastro:");

        jLabel2.setText("ID:");

        txtId.setEditable(false);
        txtId.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtId.setText("0");
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtProfissao, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chbAtivo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtcDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel22)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(dtcNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRG, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtId)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel22)
                                .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel29)
                                .addComponent(txtRG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel28))
                            .addComponent(dtcNascimento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel26)
                            .addComponent(txtProfissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(chbAtivo)
                            .addComponent(jLabel27)
                            .addComponent(txtCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dtcDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel30))))
                .addGap(0, 0, 0))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Foto"));

        lblFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnAddFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Add.png"))); // NOI18N
        btnAddFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFotoActionPerformed(evt);
            }
        });

        btnRemFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Remove.png"))); // NOI18N
        btnRemFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemFotoActionPerformed(evt);
            }
        });

        btnPreview.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Zoom.png"))); // NOI18N
        btnPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAddFoto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemFoto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPreview)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddFoto)
                    .addComponent(btnRemFoto)
                    .addComponent(btnPreview))
                .addContainerGap())
        );

        jToolBar1.setRollover(true);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Person.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setFocusable(false);
        btnNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNovo);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Save.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setFocusable(false);
        btnSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSalvar);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Modify.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Delete.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setFocusable(false);
        btnExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExcluir);

        btnLocalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Search.png"))); // NOI18N
        btnLocalizar.setText("Localizar");
        btnLocalizar.setFocusable(false);
        btnLocalizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLocalizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnLocalizar);

        btnFicha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/24x24/Report.png"))); // NOI18N
        btnFicha.setText("Ficha");
        btnFicha.setFocusable(false);
        btnFicha.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFicha.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFichaActionPerformed(evt);
            }
        });
        jToolBar1.add(btnFicha);

        btnCancelarAcao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Abort.png"))); // NOI18N
        btnCancelarAcao.setText("Cancelar");
        btnCancelarAcao.setFocusable(false);
        btnCancelarAcao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelarAcao.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelarAcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarAcaoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCancelarAcao);

        btnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Exit.png"))); // NOI18N
        btnFechar.setText("Fechar");
        btnFechar.setFocusable(false);
        btnFechar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFechar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });
        jToolBar1.add(btnFechar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCidadeActionPerformed

    private void txtBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBairroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBairroActionPerformed

    private void txtLogradouroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLogradouroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLogradouroActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void txtSiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSiteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSiteActionPerformed

    private void txtRGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRGActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRGActionPerformed

    private void txtCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCPFActionPerformed
//        if (evt.getModifiers() == KeyEvent.VK_ENTER 
//                || evt.getModifiers() == KeyEvent.VK_TAB){
            PessoaController cPessoaController
                    = new PessoaController();
            Pessoa p = (Pessoa) cPessoaController.findParameters("cpf", txtCPF.getText(), Comparadores.IGUAL);
            if (p != null){
                int msg = ShowMessage.confirmMessage("Já existe uma pessoa cadastrada no banco de dados com este cpf!"
                        + "\nID: "+p.getId()+" Nome: " + p.getNome() + ", CPF: " + p.getCpf() + "."
                        + "\nDeseja utilizar os dados desta pessoa?"
                );
                switch(msg){
                    case 0:
                        //atualizar o paciente com a pessoa e colocar novamente
                        //no formulário
                        paciente.setPessoa(p);
                        setDataForm(paciente);
                        IS_EDITAR = true;
                        break;
                    default: break; //se não continua
                }//fim switch
            }//fim se encontrar pessoa
//        }//fim se
    }//GEN-LAST:event_txtCPFActionPerformed

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizarActionPerformed
        localizar();
    }//GEN-LAST:event_btnLocalizarActionPerformed

    private void btnPesquisaCEPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaCEPActionPerformed
        /**
         * Pesquisa o endereço pelo cep
         */
        searchEndereco();
    }//GEN-LAST:event_btnPesquisaCEPActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        salvar();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        novo();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        excluir();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        editar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnCancelarAcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarAcaoActionPerformed
        cancelar();
    }//GEN-LAST:event_btnCancelarAcaoActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        fechar();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnAddFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFotoActionPerformed
        addFoto();
    }//GEN-LAST:event_btnAddFotoActionPerformed

    private void btnRemFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemFotoActionPerformed
        removeFoto();
    }//GEN-LAST:event_btnRemFotoActionPerformed

    private void btnPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviewActionPerformed
        try {
            Desktop.getDesktop().open(new File(pathAbsoluto+paciente.getPessoa().getFoto()));
        } catch (IOException ex) {
            Logger.getLogger(DlgCadastroCliente.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPreviewActionPerformed

    private void btnFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFichaActionPerformed
        String query = "select * from pessoas p join pacientes pa on (p.pes_id = pa.pes_id)\n" +
            "join enderecos e on (p.endereco_id = e.id) where p.pes_id = "+paciente.getPessoa().getId();
        
        
        HashMap map = new HashMap();
        map.put("ID", paciente.getPessoa().getId());
        map.put("QUERY",query);
        map.put("PATH_LOGO",pathAbsoluto+paciente.getPessoa().getFoto());
        System.out.println(pathAbsoluto+paciente.getPessoa().getFoto() + "  " +paciente.getPessoa().getId());
        
        Relatorio relatorio = new Relatorio();
        relatorio.setRelName("rp_ficha_paciente_ret.jasper");
        relatorio.setParams(map);
        relatorio.setConexao(Conexao.getConexao());
        relatorio.setIsExiteOnClose(false);
        Thread th = new Thread(relatorio);
        th.start();
        fechar();
    }//GEN-LAST:event_btnFichaActionPerformed

    private void txtCPFKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCPFKeyReleased
       //        if (evt.getModifiers() == KeyEvent.VK_ENTER 
//                || evt.getModifiers() == KeyEvent.VK_TAB){
            PessoaController cPessoaController
                    = new PessoaController();
            Pessoa p = (Pessoa) cPessoaController.findParameters("cpf", txtCPF.getText(), Comparadores.IGUAL);
            if (p != null){
                int msg = ShowMessage.confirmMessage("Já existe uma pessoa cadastrada no banco de dados com este cpf!"
                        + "\nID: "+p.getId()+" Nome: " + p.getNome() + ", CPF: " + p.getCpf() + "."
                        + "\nDeseja utilizar os dados desta pessoa?"
                );
                switch(msg){
                    case 0:
                        //atualizar o paciente com a pessoa e colocar novamente
                        //no formulário
                        paciente.setPessoa(p);
                        setDataForm(paciente);
                        IS_EDITAR = true;
                        break;
                    default: break; //se não continua
                }//fim switch
            }//fim se encontrar pessoa
//        }//fim se
    }//GEN-LAST:event_txtCPFKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows Classic look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows Classic (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows Classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgCadastroCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DlgCadastroCliente(null,false).setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFoto;
    private javax.swing.JButton btnCancelarAcao;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnFicha;
    private javax.swing.JButton btnLocalizar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisaCEP;
    private javax.swing.JButton btnPreview;
    private javax.swing.JButton btnRemFoto;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JCheckBox chbAtivo;
    private javax.swing.JComboBox cmbEstado;
    private com.toedter.calendar.JDateChooser dtcDataCadastro;
    private com.toedter.calendar.JDateChooser dtcNascimento;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCPF;
    private javax.swing.JFormattedTextField txtCelular;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLogradouro;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNumero;
    private javax.swing.JTextField txtProfissao;
    private javax.swing.JTextField txtRG;
    private javax.swing.JTextField txtSite;
    private javax.swing.JFormattedTextField txtTelefone;
    private javax.swing.JTextArea txtaOutros;
    // End of variables declaration//GEN-END:variables

    @Override
    public Object getDataForm() {
        
        paciente.setProfissao(txtProfissao.getText());
        
        Pessoa pessoa = paciente.getPessoa();
        
        pessoa.setNome(txtNome.getText());
        paciente.setAtivo(chbAtivo.isSelected());
        pessoa.setNascimento(dtcNascimento.getDate());
        pessoa.setRg(txtRG.getText());
        pessoa.setCpf(txtCPF.getText());
        pessoa.setDataCadastro(dtcDataCadastro.getDate());
        pessoa.setEmail(txtEmail.getText());
        pessoa.setSite(txtSite.getText());
        pessoa.setTelefone(txtTelefone.getText());
        pessoa.setCelular(txtCelular.getText());
        pessoa.setOutro(txtaOutros.getText());
        pessoa.setNumeroEndereco(txtNumero.getText());
        pessoa.setEndereco(getEnderecoForm());
        
        return paciente;
    }

    @Override
    public void setDataForm(Object objeto) {
        this.paciente = (Cliente) objeto;
        
        Pessoa pessoa = paciente.getPessoa();
        
        txtProfissao.setText(paciente.getProfissao());
       
        txtId.setText(String.valueOf(pessoa.getId()));
        txtNome.setText(pessoa.getNome());
        dtcNascimento.setDate(pessoa.getNascimento());
        txtRG.setText(pessoa.getRg());
        txtCPF.setText(pessoa.getCpf());
        dtcDataCadastro.setDate(pessoa.getDataCadastro());
        chbAtivo.setSelected(paciente.isAtivo());
        txtEmail.setText(pessoa.getEmail());
        txtSite.setText(pessoa.getSite());
        txtTelefone.setText(pessoa.getTelefone());
        txtCelular.setText(pessoa.getCelular());
        txtaOutros.setText(pessoa.getOutro());
        txtNumero.setText(pessoa.getNumeroEndereco());
        setEnderecoForm(pessoa.getEndereco());
        
        // se a pessoa possuir foto
        if (pessoa.getFoto() != null){
            setFoto();
            btnAddFoto.setEnabled(false);//desabilita o botão de adicionar
            btnPreview.setEnabled(true);
        } else {
            lblFoto.setIcon(null);
            btnAddFoto.setEnabled(true);//habilita o botão de adicionar
            btnPreview.setEnabled(false);
        }
//        loadTratamentos();
    }

    @Override
    public void salvar() {
        
        
        if (IS_EDITAR){
            controller.setObject(getDataForm());
            controller.getCliente().getPessoa().setId(Integer.parseInt(txtId.getText()));
            if(controller.update()){
                ShowMessage.informationMessage("Cliente salvo com sucesso!");
            }
            IS_EDITAR = true;
        } else {
            controller.setObject(getDataForm());
            if (controller.update()){
                ShowMessage.informationMessage("Cliente salvo com sucesso!");
                setDataForm(controller.getCliente());
            } 
            IS_EDITAR = true;
        }
        
        enableForm(false);//desabilita o form
        enableControls(true);//desabilita controle
        btnSalvar.setEnabled(false);
        btnCancelarAcao.setEnabled(false);
    }

    @Override
    public void novo() {
        IS_EDITAR = false;
        enableForm(true);   //habilita o formulário para adição
        enableControls(false);  //desabilita todos os controles
        // e habilita o que precisa
        btnSalvar.setEnabled(true);
        btnCancelarAcao.setEnabled(true);
        setDataForm(new Cliente());
        txtId.setText("Novo");

    }

    @Override
    public void fechar() {
        dispose();
    }

    @Override
    public void editar() {
        IS_EDITAR = true;
        enableForm(true);
        //desliga todos os controles e liga cancelar e salvar
        enableControls(false);
        btnSalvar.setEnabled(true);
        btnCancelarAcao.setEnabled(true);
        
    }

    @Override
    public void excluir() {
        int msg = ShowMessage.confirmMessage("Tem certeza que deseja excluir este registro?"
                + "\nA exclusão do mesmo pode afetar outros registros no sistema,"
                + "\n portanto o registro será desativado.");
        if (msg == 0){
            controller.setObject(getDataForm());
            controller.getCliente().setAtivo(false);
            if (controller.update()){
                ShowMessage.informationMessage("O paciente foi excluido!");
                
                novo();
                cancelar();
            }//fim delete
        }//fim msg==0
    }

    @Override
    public void localizar() {
        FrmPesquisaCliente fpp =new FrmPesquisaCliente(null, rootPaneCheckingEnabled);
        fpp.setVisible(rootPaneCheckingEnabled);
        if (fpp.getCliente() != null)
        {
            //LIMPA O FORMULÁRIO PRIMEIRO
            setDataForm(new Cliente());
            setDataForm(controller.findById(fpp.getCliente().getPessoa().getId()));
            enableControls(false);
            enableForm(false);
            btnAddFoto.setEnabled(false);
            btnEditar.setEnabled(true);
            btnNovo.setEnabled(true);
            btnLocalizar.setEnabled(true);
            btnFicha.setEnabled(true);
            btnExcluir.setEnabled(true);
            IS_EDITAR = true;

        }
    }

    @Override
    public void enableControls(boolean bool) {
        btnNovo.setEnabled(bool);
        btnSalvar.setEnabled(bool);
        btnEditar.setEnabled(bool);
        btnExcluir.setEnabled(bool);
        btnLocalizar.setEnabled(bool);
        btnCancelarAcao.setEnabled(bool);
        btnFicha.setEnabled(bool);
    }

    private void loadEstados(){
        DefaultComboBoxModel dlm = (DefaultComboBoxModel) cmbEstado.getModel();
        for (Estados e : Estados.values()){
            dlm.addElement(e);
        }//fim for
        dlm.setSelectedItem(Estados.SP);
    }//fim loadEstados

    @Override
    public void enableForm(boolean bool) {
        txtProfissao.setEditable(bool);
                
//        txtId.setEditable(bool);
        txtNome.setEditable(bool);
        dtcNascimento.setEnabled(bool);
        txtRG.setEditable(bool);
        txtCPF.setEditable(bool);
        dtcDataCadastro.setEnabled(bool);
        chbAtivo.setEnabled(bool);
        
        txtEmail.setEditable(bool);
        txtSite.setEditable(bool);
        txtTelefone.setEditable(bool);
        txtCelular.setEditable(bool);
        txtaOutros.setEditable(bool);
                
        btnPesquisaCEP.setEnabled(bool);
        txtLogradouro.setEditable(bool);
        txtBairro.setEditable(bool);
        txtCep.setEditable(bool);
        txtCidade.setEditable(bool);
        cmbEstado.setEnabled(bool);
        txtNumero.setEnabled(bool);
        
        btnAddFoto.setEnabled(bool);
        btnRemFoto.setEnabled(bool);
        btnPreview.setEnabled(bool);
        
    }
    
    public void visibleControls(boolean bool) {
        btnNovo.setVisible(bool);
        btnSalvar.setVisible(bool);
        btnEditar.setVisible(bool);
        btnExcluir.setVisible(bool);
        btnLocalizar.setVisible(bool);
        btnCancelarAcao.setVisible(bool);
        btnFicha.setEnabled(bool);
    }
    
    /**
     * Esconde e visualiza botões do sistema para usuário
     */
    @Override
    public void verPermissao(){
        visibleControls(false);
        Usuario usuario = Sessao.getInstance().getUsuario();
        if (usuario.isAllowed(CasoUso.MANUTENCAO_CLIENTES)){
            
            for (Permissao per : usuario.getPermissaos(CasoUso.MANUTENCAO_CLIENTES)){
                
                switch(per){
                    case LER:
                        btnLocalizar.setVisible(true);
                        btnFicha.setVisible(true);
                        break;
                    case CRIAR:
                        btnSalvar.setVisible(true);
                        btnNovo.setVisible(true);
                        btnCancelarAcao.setVisible(true);
                        break;
                    case EDITAR:
                        btnSalvar.setVisible(true);
                        btnEditar.setVisible(true);
                        btnCancelarAcao.setVisible(true);
                        break;
                    case EXCLUIR:
                        btnExcluir.setVisible(true);
                        btnCancelarAcao.setVisible(true);
                        break;
                }//fim switch
            } //fim for
            //permissões para consutla
            
            for (Permissao per : usuario.getPermissaos(CasoUso.MANUTENCAO_ORDEMSERVICOS))
                switch(per){
                    case LER:
                        
                        break;
                    case CRIAR:
                        
                        break;
                    default: break;
                }
        } else {
            ShowMessage.informationMessage("Você não possui acesso a esta área!");
            fechar();
        }//fim se tiver permissão
        
        //se ele não pode ver então encerra caso
        if (!usuario.isAllowed(CasoUso.MANUTENCAO_CLIENTES, Permissao.LER)) {
            ShowMessage.informationMessage("Você não possui acesso a esta área!");
            dispose();
        }
    }//fim verpermissoes

    private void cancelar() {
        enableForm(false);
        enableControls(false);
        btnNovo.setEnabled(true);
        btnLocalizar.setEnabled(true);
        btnFicha.setEnabled(true);
        if (IS_EDITAR) {
            btnEditar.setEnabled(true);
            btnExcluir.setEnabled(true);
        }
        
    }

    private void searchEndereco() {
        EnderecoController cEndereco = new EnderecoController();
        endereco = cEndereco.findByCep(txtCep.getText()); // se não ouver nada retorna null
        if (endereco == null){
            FrmPesquisaEndereco fe = new FrmPesquisaEndereco(null, true);
            fe.setVisible(true);
            endereco = fe.getEndereco();
        }
        setEnderecoForm(endereco);
    }//fim search

    private Endereco getEnderecoForm() {
        //GARNTE A NOVA INSTANCIA PARA ENDERECO
        if (endereco == null){
            endereco = new Endereco();
        }
        endereco.setLogradouro(txtLogradouro.getText());
        endereco.setBairro(txtBairro.getText());
        endereco.setCep(txtCep.getText());
        endereco.setCidade(txtCidade.getText());
        endereco.setUf(Estados.valueOf(cmbEstado.getSelectedItem().toString()).name());
        
        return endereco;
    }

    private void setEnderecoForm(Endereco endereco) {
        //SE HOUVER UMA INSTACIA APROVEITA A MESMA
        if (endereco instanceof Endereco)
            this.endereco = endereco;
        else endereco = new Endereco();
        
        txtLogradouro.setText(endereco.getLogradouro());
        txtBairro.setText(endereco.getBairro());
        txtCep.setText(endereco.getCep());
        txtCidade.setText(endereco.getCidade());
        cmbEstado.setSelectedItem(Estados.valueOf(endereco.getUf()));
    }

//    private void loadTratamentos() {
//        MyTableModel mtm = new MyTableModel();
//        mtm.setColunas(new String[]{"Data","Diagnóstico","Médico","Profissional","Convênio"});
//        for (Tratamento t : paciente.getTratamentos()){
//            mtm.addRow(new Object[]{DataDefault.parseDataBrasil(
//                    t.getDataDiagnostico())
//                    ,t.getDiagClinico()
//                    ,t.getMedico().getPessoa().getNome()
//                    ,t.getProfissional().getPessoa().getNome()
//                    ,t.getConvenio().getNome()
//            });
//        }
//        
//    }
    
    private void addFoto(){
        
        JFileChooser fl = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Imagens JPG", "jpg","jpeg");
        fl.setFileFilter(filtro);
        
        fl.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int val = fl.showDialog(this, "Selecionar");
        if (val == JFileChooser.APPROVE_OPTION) {
            try {
                
                //verifica a existencia do diretorio de documentos
                // pathAbsoluto + pathRelativo
                System.out.println(pathAbsoluto + pathRelativo + paciente.getPessoa().getId()+"/");
                File out = new File(pathAbsoluto + pathRelativo + paciente.getPessoa().getId()+"/");
                
                if (!out.exists())
                    out.mkdirs();
                
                //Abre o arquivo selecionado para transferencia com path original
                FileInputStream inFile = new FileInputStream(fl.getSelectedFile()); 
                
                //criar o arquivo bruto de saida
                // arquivo documentos + nome do novo arquivo
                String pathOut = out.toString()+"/"+fl.getSelectedFile().getName();
                
                System.out.println(pathOut);
                //abre o fluxo para transferir o novo arquivo
                FileOutputStream outFile = new FileOutputStream(new File(pathOut));
                
                //coloca o caminho relativo no banco
                paciente.getPessoa().setFoto(pathRelativo+paciente.getPessoa().getId()+"\\"+fl.getSelectedFile().getName());

                //faz a transferencia
                FileChannel origem = inFile.getChannel();
                FileChannel destino = outFile.getChannel();
                origem.transferTo(0, origem.size(), destino);
                origem.close();
                destino.close();
                inFile.close();
                outFile.close();

                setFoto();
//              
            } catch (FileNotFoundException ex) {
                Log.log(DlgCadastroCliente.class.getName(), ex);
            } catch (IOException ex) {
                Log.log(DlgCadastroCliente.class.getName(), ex);
            }
        }//fim se val
        
                    
    }//fim addFoto()

    private boolean removeFoto() {
        File foto = new File(pathAbsoluto + paciente.getPessoa().getFoto());
        if (foto.exists()){
            if(foto.delete()){
                paciente.getPessoa().setFoto(null);
                setFoto();
                return true;
            }
        }
        return false;
    }
    
    private void setFoto(){
        ImageIcon ico = new ImageIcon(pathAbsoluto + paciente.getPessoa().getFoto());
        ico.setImage(ico.getImage().getScaledInstance(lblFoto.getWidth()-10, lblFoto.getHeight(), 50));
        lblFoto.setIcon(ico);
        
    }
    
    public static boolean deleteDir(File dir) {
        //se o arquivo é diretório
        if (dir.isDirectory()) {
            System.out.println("O Arquivo "+dir.getName()+" é um diretório!");
            //encontra os filhos
            String[] children = dir.list();
            for (int i=0; i<children.length; i++) { 
               System.out.println("Encontrado um filho "+children[i]+"!");
               boolean success = deleteDir(new File(dir, children[i]));
                if (!success) {
                    return false;
                }//fim se nõ deu certo
            }//fim for
        } else {
            System.out.println("O Arquivo "+dir.getName()+" não é um diretório!");
        }//fim se é diretorio
    
        // Agora o diretório está vazio, restando apenas deletá-lo.
        return dir.delete();
    }
}//fim classe
