/*
 * Este software foi desenvolvido e criado por Rodrigo Attique Santana,
 * todos os algoritimos presentes aqui são de altoria do desenvolvedor, não sendo permitido
 * cópia ou distribuição sem o consentimento do mesmo.
 * É proibido vender, modificar, distribuir sem autorização.
 * copyright Attique Tecnologia.
 */
package views.enderecos;

import controllers.EnderecoController;
import javax.swing.DefaultComboBoxModel;
import models.Endereco;
import models.enuns.Estados;
import models.interfaces.DefaultComponent;
import models.interfaces.DefaultFormCadastro;
import models.usuarios.CasoUso;
import models.usuarios.Permissao;
import models.usuarios.Sessao;
import models.usuarios.Usuario;
import utils.ShowMessage;

/**
 *
 * @author Rodrigo
 */
public class DlgEndereco extends javax.swing.JDialog implements DefaultFormCadastro, DefaultComponent{

    private Endereco endereco;
    private boolean IS_EDITAR = false;
    private EnderecoController controller;
    /**
     * Creates new form DlgEndereco
     */
    public DlgEndereco(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.controller = new EnderecoController();
        initComponents();
        setLocationRelativeTo(null);
        
        enableForm(false);
        enableControls(false);
        btnNovo.setEnabled(true);
        btnLocalizar.setEnabled(true);
        loadEstados();
        verPermissao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnEditarPaciente = new javax.swing.JButton();
        btnExcluirPaciente = new javax.swing.JButton();
        btnLocalizar = new javax.swing.JButton();
        btnCancelarAcao = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        txtLogradouro = new javax.swing.JTextField();
        txtBairro = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        txtCep = new javax.swing.JFormattedTextField();
        cmbEstado = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Endereço");

        jToolBar1.setRollover(true);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Person.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setFocusable(false);
        btnNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNovo);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Save.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setFocusable(false);
        btnSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSalvar);

        btnEditarPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Modify.png"))); // NOI18N
        btnEditarPaciente.setText("Editar");
        btnEditarPaciente.setFocusable(false);
        btnEditarPaciente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditarPaciente.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditarPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarPacienteActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditarPaciente);

        btnExcluirPaciente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Delete.png"))); // NOI18N
        btnExcluirPaciente.setText("Excluir");
        btnExcluirPaciente.setFocusable(false);
        btnExcluirPaciente.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcluirPaciente.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExcluirPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirPacienteActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExcluirPaciente);

        btnLocalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Search.png"))); // NOI18N
        btnLocalizar.setText("Localizar");
        btnLocalizar.setFocusable(false);
        btnLocalizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLocalizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnLocalizar);

        btnCancelarAcao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Abort.png"))); // NOI18N
        btnCancelarAcao.setText("Cancelar");
        btnCancelarAcao.setFocusable(false);
        btnCancelarAcao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelarAcao.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelarAcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarAcaoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCancelarAcao);

        btnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Exit.png"))); // NOI18N
        btnFechar.setText("Fechar");
        btnFechar.setFocusable(false);
        btnFechar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFechar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });
        jToolBar1.add(btnFechar);

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Endereço"));

        jLabel37.setText("Logradouro:");

        jLabel39.setText("Bairro:");

        jLabel40.setText("CEP:");

        jLabel41.setText("Cidade:");

        jLabel42.setText("UF:");

        try {
            txtCep.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("#####-###")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel37)
                            .addComponent(jLabel40))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtLogradouro)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel41)
                            .addComponent(jLabel39))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(txtCidade, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel42)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtBairro))))
                .addGap(5, 5, 5))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel40)
                    .addComponent(txtCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(txtLogradouro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel39)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(txtCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel42)
                    .addComponent(cmbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizarActionPerformed
        localizar();
    }//GEN-LAST:event_btnLocalizarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        novo();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        salvar();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnEditarPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarPacienteActionPerformed
        editar();
    }//GEN-LAST:event_btnEditarPacienteActionPerformed

    private void btnExcluirPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirPacienteActionPerformed
        excluir();
    }//GEN-LAST:event_btnExcluirPacienteActionPerformed

    private void btnCancelarAcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarAcaoActionPerformed
        cancelar();
    }//GEN-LAST:event_btnCancelarAcaoActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        fechar();
    }//GEN-LAST:event_btnFecharActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows Classic look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows Classic (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows Classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgEndereco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgEndereco dialog = new DlgEndereco(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarAcao;
    private javax.swing.JButton btnEditarPaciente;
    private javax.swing.JButton btnExcluirPaciente;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnLocalizar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cmbEstado;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JFormattedTextField txtCep;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtLogradouro;
    // End of variables declaration//GEN-END:variables

    @Override
    public Object getDataForm() {
        endereco.setLogradouro(txtLogradouro.getText());
        endereco.setBairro(txtBairro.getText());
        endereco.setCep(txtCep.getText());
        endereco.setCidade(txtCidade.getText());
        endereco.setUf(Estados.valueOf(cmbEstado.getSelectedItem().toString()).name());
        
        return endereco;
    }

    @Override
    public void setDataForm(Object objeto) {
        endereco = (Endereco) objeto;
        txtLogradouro.setText(endereco.getLogradouro());
        txtBairro.setText(endereco.getBairro());
        txtCep.setText(endereco.getCep());
        txtCidade.setText(endereco.getCidade());
        cmbEstado.setSelectedItem(Estados.valueOf(endereco.getUf()));
    }

    @Override
    public void salvar() {
        
        if (IS_EDITAR){
            controller.setEndereco((Endereco) getDataForm());
            if(controller.update()){
                ShowMessage.informationMessage("Endereço Salvo com sucesso!");
            }
            IS_EDITAR = true;
        } else {
            controller.setEndereco((Endereco) getDataForm());
            if (controller.save()){
                ShowMessage.informationMessage("Endereço Salvo com sucesso!");
            }
            IS_EDITAR = true;
        }
        
        enableForm(false);//desabilita o form
        enableControls(true);//desabilita controle
        btnSalvar.setEnabled(false);
        btnCancelarAcao.setEnabled(false);
    }

    @Override
    public void novo() {
        IS_EDITAR = false;
        enableForm(true);   //habilita o formulário para adição
        enableControls(false);  //desabilita todos os controles
        // e habilita o que precisa
        btnSalvar.setEnabled(true);
        btnCancelarAcao.setEnabled(true);
        setDataForm(new Endereco());
    }

    @Override
    public void fechar() {
        dispose();
    }

    @Override
    public void editar() {
        IS_EDITAR = true;
        enableForm(true);
        //desliga todos os controles e liga cancelar e salvar
        enableControls(false);
        btnSalvar.setEnabled(true);
        btnCancelarAcao.setEnabled(true);
    }

    @Override
    public void excluir() {
        int msg = ShowMessage.confirmMessage("Tem certeza que deseja excluir este registro?"
                + "\nA exclusão do mesmo pode afetar outros registros no sistema.");
        if (msg == 0){
            controller.setEndereco((Endereco) getDataForm());
            if (controller.delete()){
                ShowMessage.informationMessage("O endereço foi excluido!");
                novo();
                cancelar();
            }//fim delete
        }//fim msg==0
    }

    @Override
    public void localizar() {
        FrmPesquisaEndereco fpp =new FrmPesquisaEndereco(null, rootPaneCheckingEnabled);
        fpp.setVisible(rootPaneCheckingEnabled);
        if (fpp.getEndereco() != null)
        {
            setDataForm(fpp.getEndereco());
            enableControls(false);
            btnEditarPaciente.setEnabled(true);
            btnNovo.setEnabled(true);
            btnLocalizar.setEnabled(true);
            btnExcluirPaciente.setEnabled(true);
            IS_EDITAR = true;

        }
    }

    @Override
    public void enableControls(boolean bool) {
        btnNovo.setEnabled(bool);
        btnSalvar.setEnabled(bool);
        btnEditarPaciente.setEnabled(bool);
        btnExcluirPaciente.setEnabled(bool);
        btnLocalizar.setEnabled(bool);
        btnCancelarAcao.setEnabled(bool);
    }

    private void loadEstados(){
        DefaultComboBoxModel dlm = (DefaultComboBoxModel) cmbEstado.getModel();
        for (Estados e : Estados.values()){
            dlm.addElement(e);
        }//fim for
        dlm.setSelectedItem(Estados.SP);
    }//fim loadEstados

    @Override
    public void enableForm(boolean bool) {
        txtLogradouro.setEditable(bool);
        txtBairro.setEditable(bool);
        txtCep.setEditable(bool);
        txtCidade.setEditable(bool);
        cmbEstado.setEnabled(bool);
    }
    
    public void visibleControls(boolean bool) {
        btnNovo.setVisible(bool);
        btnSalvar.setVisible(bool);
        btnEditarPaciente.setVisible(bool);
        btnExcluirPaciente.setVisible(bool);
        btnLocalizar.setVisible(bool);
        btnCancelarAcao.setVisible(bool);
    }
    
    /**
     * Esconde e visualiza botões do sistema para usuário
     */
    @Override
    public void verPermissao(){
        visibleControls(false);
        Usuario usuario = Sessao.getInstance().getUsuario();
        if (usuario.isAllowed(CasoUso.MANUTENCAO_ENDERECOS)){
            
            for (Permissao per : usuario.getPermissaos(CasoUso.MANUTENCAO_ENDERECOS)){
                
                switch(per){
                    case LER:
                        btnLocalizar.setVisible(true);
                        break;
                    case CRIAR:
                        btnSalvar.setVisible(true);
                        btnNovo.setVisible(true);
                        btnCancelarAcao.setVisible(true);
                        break;
                    case EDITAR:
                        btnSalvar.setVisible(true);
                        btnEditarPaciente.setVisible(true);
                        btnCancelarAcao.setVisible(true);
                        break;
                    case EXCLUIR:
                        btnExcluirPaciente.setVisible(true);
                        btnCancelarAcao.setVisible(true);
                        break;
                }//fim switch
            } //fim for
        } else {
            ShowMessage.informationMessage("Você não possui acesso a esta área!");
            fechar();
        }//fim se tiver permissão
        
        //se ele não pode ver então encerra caso
        if (!usuario.isAllowed(CasoUso.MANUTENCAO_ENDERECOS, Permissao.LER)) {
            ShowMessage.informationMessage("Você não possui acesso a esta área!");
            dispose();
        }
    }//fim verpermissoes

    private void cancelar() {
        enableForm(false);
        enableControls(false);
        btnNovo.setEnabled(true);
        btnLocalizar.setEnabled(true);
        if (IS_EDITAR) {
            btnEditarPaciente.setEnabled(true);
            btnExcluirPaciente.setEnabled(true);
        }
    }
}//fim classe
