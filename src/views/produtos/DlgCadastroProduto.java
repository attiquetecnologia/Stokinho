/*
 * Este software foi desenvolvido e criado por Rodrigo Attique Santana,
 * todos os algoritimos presentes aqui são de altoria do desenvolvedor, não sendo permitido
 * cópia ou distribuição sem o consentimento do mesmo.
 * É proibido vender, modificar, distribuir sem autorização.
 * copyright Attique Tecnologia.
 */
package views.produtos;

import controllers.ProdutoController;
import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.channels.FileChannel;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import models.Configuracoes;
import static models.Configuracoes.pathAbsoluto;
import models.Endereco;
import models.Produto;
import models.interfaces.DefaultComponent;
import models.interfaces.DefaultFormCadastro;
import models.usuarios.CasoUso;
import models.usuarios.Permissao;
import models.usuarios.Sessao;
import models.usuarios.Usuario;
import utils.Log;
import utils.ShowMessage;


/**
 *
 * @author Rodrigo
 */
public class DlgCadastroProduto extends javax.swing.JDialog implements DefaultFormCadastro, DefaultComponent{

    private Produto produto;
    
    private ProdutoController controller;
    
    private boolean IS_EDITAR;
    private Endereco endereco;
    /**Encontra o caminho absoluto*/
    
    private String pathRelativo;
    
    /**
     * Creates new form DlgCadastroProduto
     */
    public DlgCadastroProduto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        
        controller = new ProdutoController();
        produto = new Produto();
        IS_EDITAR = false;
        pathRelativo = new Configuracoes().getPathDocumentos() + "/produtos/";
        enableForm(false);
        enableControls(false);
        btnNovo.setEnabled(true);
        btnLocalizar.setEnabled(true);
        
        verPermissao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnLocalizar = new javax.swing.JButton();
        btnCancelarAcao = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        txtCodigoBarras = new javax.swing.JTextField();
        chbAtivo = new javax.swing.JCheckBox();
        jLabel30 = new javax.swing.JLabel();
        dtcDataCadastro = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txtPrecoCompra = new javax.swing.JFormattedTextField();
        txtPrecoVenda = new javax.swing.JFormattedTextField();
        jLabel32 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblFoto = new javax.swing.JLabel();
        btnAddFoto = new javax.swing.JButton();
        btnRemFoto = new javax.swing.JButton();
        btnPreview = new javax.swing.JButton();
        jLabel34 = new javax.swing.JLabel();
        txtQuantidadeEstoque = new javax.swing.JFormattedTextField();
        txtEstoqueMinimo = new javax.swing.JFormattedTextField();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        cmbUnidade = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Produtos");

        jToolBar1.setRollover(true);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Person.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setFocusable(false);
        btnNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNovo);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Save.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setFocusable(false);
        btnSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSalvar);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Modify.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Delete.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setFocusable(false);
        btnExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExcluir);

        btnLocalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Search.png"))); // NOI18N
        btnLocalizar.setText("Localizar");
        btnLocalizar.setFocusable(false);
        btnLocalizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLocalizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnLocalizar);

        btnCancelarAcao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Abort.png"))); // NOI18N
        btnCancelarAcao.setText("Cancelar");
        btnCancelarAcao.setFocusable(false);
        btnCancelarAcao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelarAcao.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelarAcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarAcaoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCancelarAcao);

        btnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Exit.png"))); // NOI18N
        btnFechar.setText("Fechar");
        btnFechar.setFocusable(false);
        btnFechar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFechar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });
        jToolBar1.add(btnFechar);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Informações Gerais"));

        jLabel22.setBackground(java.awt.Color.blue);
        jLabel22.setText("Código de Barras:");

        txtCodigoBarras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoBarrasActionPerformed(evt);
            }
        });

        chbAtivo.setSelected(true);
        chbAtivo.setText("Ativo");
        chbAtivo.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel30.setBackground(java.awt.Color.blue);
        jLabel30.setText("Data de Cadastro:");

        jLabel2.setText("ID:");

        txtId.setEditable(false);
        txtId.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtId.setText("0");
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        jLabel1.setText("Descrição:");

        jLabel33.setBackground(java.awt.Color.blue);
        jLabel33.setText("Preço de Compra:");

        txtPrecoCompra.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtPrecoCompra.setToolTipText("Data de Cadastro no sistema");

        txtPrecoVenda.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtPrecoVenda.setToolTipText("Data de Cadastro no sistema");

        jLabel32.setBackground(java.awt.Color.blue);
        jLabel32.setText("Preço de Venda:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Foto"));

        lblFoto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnAddFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Add.png"))); // NOI18N
        btnAddFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFotoActionPerformed(evt);
            }
        });

        btnRemFoto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Remove.png"))); // NOI18N
        btnRemFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemFotoActionPerformed(evt);
            }
        });

        btnPreview.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Zoom.png"))); // NOI18N
        btnPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreviewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAddFoto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemFoto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPreview)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFoto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddFoto)
                    .addComponent(btnRemFoto)
                    .addComponent(btnPreview))
                .addContainerGap())
        );

        jLabel34.setBackground(java.awt.Color.blue);
        jLabel34.setText("Quantidade em estoque:");

        txtQuantidadeEstoque.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtQuantidadeEstoque.setToolTipText("Data de Cadastro no sistema");

        txtEstoqueMinimo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        txtEstoqueMinimo.setToolTipText("Data de Cadastro no sistema");

        jLabel35.setBackground(java.awt.Color.blue);
        jLabel35.setText("Estoque mínimo:");

        jLabel36.setBackground(java.awt.Color.blue);
        jLabel36.setText("Unidade:");

        cmbUnidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "UNIDADE", "PECA", "CAIXA", "M", "CM", "MM", "KG", "L", "ML", "" }));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel33)
                    .addComponent(jLabel1)
                    .addComponent(jLabel22)
                    .addComponent(jLabel2)
                    .addComponent(jLabel32)
                    .addComponent(jLabel34)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(txtCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 395, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtcDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(chbAtivo))
                    .addComponent(txtPrecoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, 702, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtQuantidadeEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cmbUnidade, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtEstoqueMinimo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtId))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dtcDataCadastro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel22)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel30)
                                .addComponent(txtCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(chbAtivo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(txtPrecoCompra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(txtPrecoVenda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel34)
                            .addComponent(txtQuantidadeEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel35)
                            .addComponent(txtEstoqueMinimo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel36)
                            .addComponent(cmbUnidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoBarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoBarrasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCodigoBarrasActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizarActionPerformed
        localizar();
    }//GEN-LAST:event_btnLocalizarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        salvar();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        novo();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        excluir();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        editar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnCancelarAcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarAcaoActionPerformed
        cancelar();
    }//GEN-LAST:event_btnCancelarAcaoActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        fechar();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnAddFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFotoActionPerformed
        addFoto();
    }//GEN-LAST:event_btnAddFotoActionPerformed

    private void btnRemFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemFotoActionPerformed
        removeFoto();
    }//GEN-LAST:event_btnRemFotoActionPerformed

    private void btnPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreviewActionPerformed
        try {
            Desktop.getDesktop().open(new File(pathAbsoluto+produto.getFoto()));
        } catch (IOException ex) {
            Log.log(DlgCadastroProduto.class.getName(), ex);
        }
    }//GEN-LAST:event_btnPreviewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgCadastroProduto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgCadastroProduto dialog = new DlgCadastroProduto(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFoto;
    private javax.swing.JButton btnCancelarAcao;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnLocalizar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPreview;
    private javax.swing.JButton btnRemFoto;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JCheckBox chbAtivo;
    private javax.swing.JComboBox cmbUnidade;
    private com.toedter.calendar.JDateChooser dtcDataCadastro;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JTextField txtCodigoBarras;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JFormattedTextField txtEstoqueMinimo;
    private javax.swing.JTextField txtId;
    private javax.swing.JFormattedTextField txtPrecoCompra;
    private javax.swing.JFormattedTextField txtPrecoVenda;
    private javax.swing.JFormattedTextField txtQuantidadeEstoque;
    // End of variables declaration//GEN-END:variables

    @Override
    public Object getDataForm() {
        
        produto.setDescricao(txtDescricao.getText());
        produto.setBarcode(txtCodigoBarras.getText());
        
        produto.setAtivo(chbAtivo.isSelected());
        produto.setPrecoCompra(txtPrecoCompra.getText().replace(',', '.'));
        produto.setPrecoVenda(txtPrecoVenda.getText().replace(',', '.'));
        produto.setDataCadastro(dtcDataCadastro.getDate());
        produto.setEstoqueMinimo(txtEstoqueMinimo.getText().replace(',', '.'));
        produto.setQuantidadeEstoque(txtQuantidadeEstoque.getText().replace(',', '.'));
        produto.setUnidade(cmbUnidade.getSelectedItem().toString());
        
        return produto;
    }

    @Override
    public void setDataForm(Object objeto) {
        this.produto = (Produto) objeto;
        
        txtId.setText(String.valueOf(produto.getId()));
        txtDescricao.setText(produto.getDescricao());
        txtCodigoBarras.setText(produto.getBarcode());
        dtcDataCadastro.setDate(produto.getDataCadastro());
        chbAtivo.setSelected(produto.isAtivo());
        txtPrecoCompra.setText(produto.getPrecoCompra().toString().replace('.', ','));
        txtPrecoVenda.setText(produto.getPrecoVenda().toString().replace('.', ','));
        txtQuantidadeEstoque.setText(produto.getQuantidadeEstoque().toString().replace('.', ','));
        txtEstoqueMinimo.setText(produto.getEstoqueMinimo().toString().replace('.', ','));
        cmbUnidade.setSelectedItem(produto.getUnidade());
        
        setFoto();
    }

    @Override
    public void salvar() {
        
        if (IS_EDITAR){
            controller.setObject(getDataForm());
            if(controller.update()){
                ShowMessage.informationMessage("Produto Salvo com sucesso!");
                setDataForm(controller.getProduto());
            }
            IS_EDITAR = true;
        } else {
            controller.setObject(getDataForm());
            if (controller.save()){
                ShowMessage.informationMessage("Produto Salvo com sucesso!");
                setDataForm(controller.getProduto());
            }
            IS_EDITAR = true;
        }
        
        enableForm(false);//desabilita o form
        enableControls(true);//desabilita controle
        btnSalvar.setEnabled(false);
        btnCancelarAcao.setEnabled(false);
    }

    @Override
    public void novo() {
        IS_EDITAR = false;
        enableForm(true);   //habilita o formulário para adição
        enableControls(false);  //desabilita todos os controles
        // e habilita o que precisa
        btnSalvar.setEnabled(true);
        btnCancelarAcao.setEnabled(true);
        setDataForm(new Produto());
        txtId.setText("Novo");
    }

    @Override
    public void fechar() {
        dispose();
    }

    @Override
    public void editar() {
        IS_EDITAR = true;
        enableForm(true);
        //desliga todos os controles e liga cancelar e salvar
        enableControls(false);
        btnSalvar.setEnabled(true);
        btnCancelarAcao.setEnabled(true);
    }

    @Override
    public void excluir() {
        int msg = ShowMessage.confirmMessage("Tem certeza que deseja excluir este registro?"
                + "\nA exclusão do mesmo pode afetar outros registros no sistema,"
                + "\nportanto este registro ficará como inativo no sistema!");
        if (msg == 0){
            //tenta apagar a foto
//            if (removeFoto()) {
                
                controller.setObject(getDataForm());
                controller.getProduto().setAtivo(false);
                if (controller.update()){
                    ShowMessage.informationMessage("O produto foi excluido!");
                    novo();
                    cancelar();
                }//fim delete
//            }
        }//fim msg==0
    }

    @Override
    public void localizar() {
        FrmPesquisaProduto fpp =new FrmPesquisaProduto(null, rootPaneCheckingEnabled);
        fpp.setVisible(rootPaneCheckingEnabled);
        if (fpp.getProduto() != null)
        {
            setDataForm(controller.findById(fpp.getProduto().getId()));
            enableControls(false);
            btnEditar.setEnabled(true);
            btnNovo.setEnabled(true);
            btnLocalizar.setEnabled(true);
            btnExcluir.setEnabled(true);
            IS_EDITAR = true;

        }
    }

    @Override
    public void enableControls(boolean bool) {
        btnNovo.setEnabled(bool);
        btnSalvar.setEnabled(bool);
        btnEditar.setEnabled(bool);
        btnExcluir.setEnabled(bool);
        btnLocalizar.setEnabled(bool);
        btnCancelarAcao.setEnabled(bool);
    }


    @Override
    public void enableForm(boolean bool) {
        txtDescricao.setEditable(bool);
        txtCodigoBarras.setEditable(bool);
        
//        txtId.setEditable(bool);
        txtPrecoCompra.setEditable(bool);
        txtPrecoVenda.setEditable(bool);
        dtcDataCadastro.setEnabled(bool);
        chbAtivo.setEnabled(bool);
        txtQuantidadeEstoque.setEditable(bool);
        txtEstoqueMinimo.setEditable(bool);
        
        cmbUnidade.setEnabled(bool);
        btnAddFoto.setEnabled(bool);
        btnRemFoto.setEnabled(bool);
        btnPreview.setEnabled(bool);
    }
    
    public void visibleControls(boolean bool) {
        btnNovo.setVisible(bool);
        btnSalvar.setVisible(bool);
        btnEditar.setVisible(bool);
        btnExcluir.setVisible(bool);
        btnLocalizar.setVisible(bool);
        btnCancelarAcao.setVisible(bool);
    }
    
    /**
     * Esconde e visualiza botões do sistema para usuário
     */
    @Override
    public void verPermissao(){
        visibleControls(false);
        Usuario usuario = Sessao.getInstance().getUsuario();
        if (usuario.isAllowed(CasoUso.MANUTENCAO_PRODUTOS)){
            
            for (Permissao per : usuario.getPermissaos(CasoUso.MANUTENCAO_PRODUTOS)){
                
                switch(per){
                    case LER:
                        btnLocalizar.setVisible(true);
                        break;
                    case CRIAR:
                        btnSalvar.setVisible(true);
                        btnNovo.setVisible(true);
                        btnCancelarAcao.setVisible(true);
                        break;
                    case EDITAR:
                        btnSalvar.setVisible(true);
                        btnEditar.setVisible(true);
                        btnCancelarAcao.setVisible(true);
                        break;
                    case EXCLUIR:
                        btnExcluir.setVisible(true);
                        btnCancelarAcao.setVisible(true);
                        break;
                }//fim switch
            } //fim for
        } else {
            ShowMessage.informationMessage("Você não possui acesso a esta área!");
            fechar();
        }//fim se tiver permissão
        
        //se ele não pode ver então encerra caso
        if (!usuario.isAllowed(CasoUso.MANUTENCAO_PRODUTOS, Permissao.LER)) {
            ShowMessage.informationMessage("Você não possui acesso a esta área!");
            dispose();
        }
    }//fim verpermissoes

    private void cancelar() {
        enableForm(false);
        enableControls(false);
        btnNovo.setEnabled(true);
        btnLocalizar.setEnabled(true);
        if (IS_EDITAR) {
            btnEditar.setEnabled(true);
            btnExcluir.setEnabled(true);
        }
    }

    private void addFoto(){
        
        JFileChooser fl = new JFileChooser();
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Imagens JPG", "jpg","jpeg");
        fl.setFileFilter(filtro);
        
        fl.setFileSelectionMode(JFileChooser.FILES_ONLY);
        int val = fl.showDialog(this, "Selecionar");
        if (val == JFileChooser.APPROVE_OPTION) {
            try {
                
                //verifica a existencia do diretorio de documentos
                // pathAbsoluto + pathRelativo
                System.out.println(pathAbsoluto + pathRelativo + produto.getId()+"/");
                File out = new File(pathAbsoluto + pathRelativo + produto.getId()+"/");
                
                if (!out.exists())
                    out.mkdirs();
                
                //Abre o arquivo selecionado para transferencia com path original
                FileInputStream inFile = new FileInputStream(fl.getSelectedFile()); 
                
                //criar o arquivo bruto de saida
                // arquivo documentos + nome do novo arquivo
                String pathOut = out.toString()+"/"+fl.getSelectedFile().getName();
                
                System.out.println(pathOut);
                //abre o fluxo para transferir o novo arquivo
                FileOutputStream outFile = new FileOutputStream(new File(pathOut));
                
                //coloca o caminho relativo no banco
                produto.setFoto(pathRelativo+produto.getId()+"\\"+fl.getSelectedFile().getName());

                //faz a transferencia
                FileChannel origem = inFile.getChannel();
                FileChannel destino = outFile.getChannel();
                origem.transferTo(0, origem.size(), destino);
                origem.close();
                destino.close();
                inFile.close();
                outFile.close();

                setFoto();
//              
            } catch (FileNotFoundException ex) {
                Log.log(DlgCadastroProduto.class.getName(), ex);
            } catch (IOException ex) {
                Log.log(DlgCadastroProduto.class.getName(), ex);
            }
        }//fim se val
        
                    
    }//fim addFoto()

    private boolean removeFoto() {
        File foto = new File(pathAbsoluto + produto.getFoto());
        if (foto.exists()){
            if(foto.delete()){
                produto.setFoto(null);
                setFoto();
                return true;
            }
        }
        return false;
    }
    
    private void setFoto(){
        ImageIcon ico = new ImageIcon(pathAbsoluto + produto.getFoto());
        ico.setImage(ico.getImage().getScaledInstance(lblFoto.getWidth()-10, lblFoto.getHeight(), 50));
        lblFoto.setIcon(ico);
        
    }
    
    public static boolean deleteDir(File dir) {
        //se o arquivo é diretório
        if (dir.isDirectory()) {
            System.out.println("O Arquivo "+dir.getName()+" é um diretório!");
            //encontra os filhos
            String[] children = dir.list();
            for (int i=0; i<children.length; i++) { 
               System.out.println("Encontrado um filho "+children[i]+"!");
               boolean success = deleteDir(new File(dir, children[i]));
                if (!success) {
                    return false;
                }//fim se nõ deu certo
            }//fim for
        } else {
            System.out.println("O Arquivo "+dir.getName()+" não é um diretório!");
        }//fim se é diretorio
    
        // Agora o diretório está vazio, restando apenas deletá-lo.
        return dir.delete();
    }
    
}//fim classe