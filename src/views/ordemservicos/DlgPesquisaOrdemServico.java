/*
 * Este software foi desenvolvido e criado por Rodrigo Attique Santana,
 * todos os algoritimos presentes aqui são de altoria do desenvolvedor, não sendo permitido
 * cópia ou distribuição sem o consentimento do mesmo.
 * É proibido vender, modificar, distribuir sem autorização.
 * copyright Attique Tecnologia.
 */
package views.ordemservicos;

import controllers.OrdemServicoController;
import java.awt.event.KeyEvent;
import javax.swing.DefaultComboBoxModel;
import models.OrdemServico;
import models.enuns.Comparadores;
import models.tablemodels.OrdemServicoTableModel;
import utils.ShowMessage;

/**
 *
 * @author Rodrigo
 */
public class DlgPesquisaOrdemServico extends javax.swing.JDialog implements models.interfaces.DefaultTableResult{
    
    private final OrdemServicoController controller = new OrdemServicoController();
    private OrdemServico ordemServico;
    private String comparador = "";
    private String pesquisa = "";
    private String filtro = "";
    
    /**
     * Creates new form DlgPesquisaOrdemServico
     */
    public DlgPesquisaOrdemServico(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setTitle("Pesquisa de Ordem de Servicos");
        setLocationRelativeTo(null);
        loadFitros();
        search();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblResultado = new javax.swing.JTable();
        cmbStatusNota = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        cmbFiltro = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        cmbQueEh = new javax.swing.JComboBox();
        txtPesquisa = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        btnSelecionar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnNaoFaturado = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblResultado.setAutoCreateRowSorter(true);
        tblResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblResultado.setRowHeight(22);
        jScrollPane1.setViewportView(tblResultado);

        cmbStatusNota.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ORCAMENTO", "AGUARDANDO", "EXECUCAO", "CONCLUIDO", "CANCELADO", "TODOS" }));
        cmbStatusNota.setSelectedIndex(5);
        cmbStatusNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStatusNotaActionPerformed(evt);
            }
        });

        jLabel2.setText("Status:");

        jLabel1.setText("Filtro");

        cmbFiltro.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Número", "Descricao", "Nome do Cliente", "Nome do Profissional", "Data de Abertura" }));
        cmbFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbFiltroActionPerformed(evt);
            }
        });

        jLabel3.setText("que");

        cmbQueEh.setModel(
            new javax.swing.DefaultComboBoxModel(models.enuns.Comparadores.values()));
        cmbQueEh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbQueEhActionPerformed(evt);
            }
        });

        btnPesquisar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Find.png"))); // NOI18N
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        btnSelecionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/24x24/Apply.png"))); // NOI18N
        btnSelecionar.setText("Selecionar");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/24x24/Exit.png"))); // NOI18N
        btnCancelar.setText("Fechar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnNaoFaturado.setSelected(true);
        btnNaoFaturado.setText("Não Faturado");
        btnNaoFaturado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNaoFaturadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSelecionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelar))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnNaoFaturado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbStatusNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbQueEh, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPesquisar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbStatusNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(jLabel1)
                        .addComponent(cmbFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(cmbQueEh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnNaoFaturado))
                    .addComponent(btnPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelecionar)
                    .addComponent(btnCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbStatusNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStatusNotaActionPerformed
        search();
    }//GEN-LAST:event_cmbStatusNotaActionPerformed

    private void cmbQueEhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbQueEhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbQueEhActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        // TODO add your handling code here:
        search();
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed
        // TODO add your handling code here:
        if (tblResultado.getSelectedRow()>=0) {
            selecionar();
        }
    }//GEN-LAST:event_btnSelecionarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnNaoFaturadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNaoFaturadoActionPerformed
        search();
    }//GEN-LAST:event_btnNaoFaturadoActionPerformed

    private void cmbFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbFiltroActionPerformed
        switch(cmbFiltro.getSelectedIndex()){
            case 0:
                cmbQueEh.setSelectedItem(Comparadores.IGUAL);
                break;
            case 5:
                cmbQueEh.setSelectedItem(Comparadores.IGUAL);
            default: break;
        }
    }//GEN-LAST:event_cmbFiltroActionPerformed

    
    
    public OrdemServico getOrdemServico() {
        return ordemServico;
    }

    public void setOrdemServico(OrdemServico ordemServico) {
        this.ordemServico = ordemServico;
    }
    
    @Override
    public void search() {
        String faturado = "";
        if (btnNaoFaturado.isSelected()){
            //todas as ordens não faturadas
            faturado = " and os.faturado = false ";
        } else { 
            faturado = " and os.faturado = true ";
        }
        
        String query = "select os from OrdemServico os where "
                + "{filtro} {comp} UPPER(?1) {ativo} {faturado}"
                + "ORDER BY {filtro} asc";
        query = query.replace("{filtro}", "upper(os.descricaoOcorrencia)");
        query = query.replace("{comp}", "like");
        query = query.replace("{faturado}",faturado);
        query = query.replace("{ativo}", !"".equals(getStatus()) ? "and os.status = '" + getStatus() + "'": getStatus());
        
        System.out.println(query);
        setDataTable(
                new OrdemServicoTableModel(
                        controller.findByParameters(query, "%"+getPesquisa()+"%")));
        tblResultado.getColumnModel().getColumn(0).setPreferredWidth(50);
        tblResultado.getColumnModel().getColumn(1).setPreferredWidth(250);
        tblResultado.getColumnModel().getColumn(2).setPreferredWidth(150);
        tblResultado.getColumnModel().getColumn(3).setPreferredWidth(150);
        tblResultado.getColumnModel().getColumn(4).setPreferredWidth(150);
     
        
    }

    @Override
    public void selecionar() {
        int index = tblResultado.getRowSorter().convertRowIndexToModel(tblResultado.getSelectedRow());
        if (index >=0){
            OrdemServicoTableModel model = (OrdemServicoTableModel) tblResultado.getModel();
            ordemServico = model.getOrdemServico(index);
            dispose();
        } else {
            ShowMessage.warningMessage("Selecione ao menos um registro na tabela!");
        }
    }
    
    private void loadFitros() {
        cmbQueEh.setSelectedItem(Comparadores.IGUAL);
        
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgPesquisaOrdemServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgPesquisaOrdemServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgPesquisaOrdemServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgPesquisaOrdemServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgPesquisaOrdemServico dialog = new DlgPesquisaOrdemServico(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JToggleButton btnNaoFaturado;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JComboBox cmbFiltro;
    private javax.swing.JComboBox cmbQueEh;
    private javax.swing.JComboBox cmbStatusNota;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblResultado;
    private javax.swing.JTextField txtPesquisa;
    // End of variables declaration//GEN-END:variables

    @Override
    public void novo() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void fechar() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void editar() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public Object[] getDataRow() {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void setDataTable(Object[][] rows, Object[] cols, int[] sizeColumns) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
    
    public Comparadores getComparadores(){
        return Comparadores.values()[cmbQueEh.getSelectedIndex()];
    }
    public String getComparador() {
        Comparadores comp = Comparadores.valueOf(cmbQueEh.getSelectedItem().toString());
        return comp.getSimbol();
    }

    public String getPesquisa() {
        pesquisa = txtPesquisa.getText();
        
        return pesquisa;
    }

    public String getFiltro() {
        switch(cmbFiltro.getSelectedIndex()){
            case 0: return "os.id";
            case 1: return "upper(os.descricaoOcorrencia)";
            case 2: return "upper(os.cliente.pessoa.nome)";
            case 3: return "upper(os.profissional.pessoa.nome)";
            case 4: return "abertura";
        }
        return "descricaoOcorrencia";
    }

    private void setDataTable(OrdemServicoTableModel ordemServicoTableModel) {
        tblResultado.setModel(ordemServicoTableModel);
    }
    
    public String getStatus(){
        return cmbStatusNota.getSelectedIndex() != 5 ? cmbStatusNota.getSelectedItem().toString() : "";
    }
    
}//fim classe
