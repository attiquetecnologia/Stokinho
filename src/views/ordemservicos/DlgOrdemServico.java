/*
 * Este software foi desenvolvido e criado por Rodrigo Attique Santana,
 * todos os algoritimos presentes aqui são de altoria do desenvolvedor, não sendo permitido
 * cópia ou distribuição sem o consentimento do mesmo.
 * É proibido vender, modificar, distribuir sem autorização.
 * copyright Attique Tecnologia.
 */
package views.ordemservicos;

import views.clientes.FrmPesquisaCliente;
import br.attique.relatorios.Relatorio;
import controllers.OrdemServicoController;
import java.awt.Color;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import models.Servico;
import models.Produto;
import models.Cliente;
import models.Profissional;
import models.OrdemServico;
import models.interfaces.DefaultComponent;
import models.interfaces.DefaultFormCadastro;
import models.usuarios.CasoUso;
import models.usuarios.Permissao;
import models.usuarios.Sessao;
import models.usuarios.Usuario;
import persistence.jdbc.Conexao;
import utils.DataDefault;
import utils.Log;
import utils.ShowMessage;
import views.servicos.FrmPesquisaServico;
import views.produtos.FrmPesquisaProduto;
import views.profissionais.FrmPesquisaProfissional;

/**
 *
 * @author Rodrigo
 */
public class DlgOrdemServico extends javax.swing.JDialog implements DefaultFormCadastro, DefaultComponent{
    
    private List<Servico> servicos;
    private List<Produto> produtos;
    private List<Object[]> produtosOrdem;
    private Profissional profissional;
    private Cliente cliente;
    private OrdemServico ordemServico;
    private boolean IS_EDITAR;
    private OrdemServicoController controller;
    private BigDecimal valorOrdem;
    private BigDecimal valorDesconto;
//    private final String pathRelativo;
        
    /**
     * Creates new form DlgDiagnostico
     */
    public DlgOrdemServico(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
        
        controller = new OrdemServicoController();
        ordemServico = new OrdemServico();
        cliente = new Cliente();
        servicos = new ArrayList<>();
        produtos = new ArrayList<>();
        produtosOrdem = new ArrayList<>();
        IS_EDITAR = false;
        
        enableForm(false);
        enableControls(false);
        verPermissao();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        btnNovo = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnLocalizar = new javax.swing.JButton();
        btnFicha = new javax.swing.JButton();
        btnCancelarAcao = new javax.swing.JButton();
        btnFaturar = new javax.swing.JButton();
        btnFechar = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        dtcDataDiagnostico = new com.toedter.calendar.JDateChooser();
        jLabel14 = new javax.swing.JLabel();
        txtCliente = new javax.swing.JTextField();
        btnPesquisaCliente = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbStatusNota = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        spnTempoGarantia = new javax.swing.JSpinner();
        cmbQuantidadeTempoGarantia = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        pnServicos = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblServicos = new javax.swing.JTable();
        btnAddServico = new javax.swing.JButton();
        btnRemoveServico = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblProdutos = new javax.swing.JTable();
        btnAddProduto = new javax.swing.JButton();
        btnRemoveProduto = new javax.swing.JButton();
        btnAlteraQuantidade = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        txtNomeProfissional = new javax.swing.JTextField();
        btnPesquisaProfissional = new javax.swing.JButton();
        lblEspecialidade = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtDescricaoOcorrencia = new javax.swing.JTextArea();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtDesconto = new javax.swing.JTextField();
        lblDiferenca = new javax.swing.JLabel();
        txtValorOrdem = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblEncerramento = new javax.swing.JLabel();
        lblFaturado = new javax.swing.JLabel();
        lblIdOrdem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ordem de Serviços");

        jToolBar1.setRollover(true);

        btnNovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Person.png"))); // NOI18N
        btnNovo.setText("Novo");
        btnNovo.setFocusable(false);
        btnNovo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnNovo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnNovo);

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Save.png"))); // NOI18N
        btnSalvar.setText("Salvar");
        btnSalvar.setToolTipText("Salva a nota sem confirmar");
        btnSalvar.setFocusable(false);
        btnSalvar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSalvar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSalvar);

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Modify.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.setFocusable(false);
        btnEditar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEditar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnEditar);

        btnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Delete.png"))); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setFocusable(false);
        btnExcluir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnExcluir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        jToolBar1.add(btnExcluir);

        btnLocalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Search.png"))); // NOI18N
        btnLocalizar.setText("Localizar");
        btnLocalizar.setFocusable(false);
        btnLocalizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnLocalizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnLocalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocalizarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnLocalizar);

        btnFicha.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/24x24/print.png"))); // NOI18N
        btnFicha.setText("Imprimir");
        btnFicha.setFocusable(false);
        btnFicha.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFicha.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFichaActionPerformed(evt);
            }
        });
        jToolBar1.add(btnFicha);

        btnCancelarAcao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Abort.png"))); // NOI18N
        btnCancelarAcao.setText("Cancelar");
        btnCancelarAcao.setFocusable(false);
        btnCancelarAcao.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelarAcao.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelarAcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarAcaoActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCancelarAcao);

        btnFaturar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/24x24/Dollar.png"))); // NOI18N
        btnFaturar.setText("Faturar");
        btnFaturar.setToolTipText("Confirmar a adição da nota ao sistema");
        btnFaturar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFaturar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFaturar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFaturarActionPerformed(evt);
            }
        });
        jToolBar1.add(btnFaturar);

        btnFechar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Exit.png"))); // NOI18N
        btnFechar.setText("Fechar");
        btnFechar.setFocusable(false);
        btnFechar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFechar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharActionPerformed(evt);
            }
        });
        jToolBar1.add(btnFechar);

        jLabel44.setText("Abertura:");

        dtcDataDiagnostico.setDate(new java.util.Date());

        jLabel14.setBackground(java.awt.Color.blue);
        jLabel14.setText("Cliente:");

        txtCliente.setEditable(false);

        btnPesquisaCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Search.png"))); // NOI18N
        btnPesquisaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaClienteActionPerformed(evt);
            }
        });

        jLabel2.setText("Status:");

        cmbStatusNota.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ORCAMENTO", "AGUARDANDO", "EXECUCAO", "CONCLUIDO", "CANCELADO" }));
        cmbStatusNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStatusNotaActionPerformed(evt);
            }
        });

        jLabel3.setText("Garantia:");

        cmbQuantidadeTempoGarantia.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dias", "Meses", "Anos" }));

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        pnServicos.setBorder(javax.swing.BorderFactory.createTitledBorder("Seriços"));

        tblServicos.setAutoCreateRowSorter(true);
        tblServicos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Serviço", "Valor"
            }
        ));
        tblServicos.setRowHeight(22);
        jScrollPane9.setViewportView(tblServicos);

        btnAddServico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Add.png"))); // NOI18N
        btnAddServico.setText("Adicionar");
        btnAddServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddServicoActionPerformed(evt);
            }
        });

        btnRemoveServico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Delete.png"))); // NOI18N
        btnRemoveServico.setText("Remover");
        btnRemoveServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveServicoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnServicosLayout = new javax.swing.GroupLayout(pnServicos);
        pnServicos.setLayout(pnServicosLayout);
        pnServicosLayout.setHorizontalGroup(
            pnServicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnServicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnServicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                    .addGroup(pnServicosLayout.createSequentialGroup()
                        .addComponent(btnAddServico)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveServico)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnServicosLayout.setVerticalGroup(
            pnServicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnServicosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnServicosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddServico)
                    .addComponent(btnRemoveServico))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Produtos"));

        tblProdutos.setAutoCreateRowSorter(true);
        tblProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Produto", "Qtd", "Unitário", "Total"
            }
        ));
        tblProdutos.setRowHeight(22);
        jScrollPane8.setViewportView(tblProdutos);

        btnAddProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Add.png"))); // NOI18N
        btnAddProduto.setText("Adicionar");
        btnAddProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddProdutoActionPerformed(evt);
            }
        });

        btnRemoveProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Delete.png"))); // NOI18N
        btnRemoveProduto.setText("Remover");
        btnRemoveProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveProdutoActionPerformed(evt);
            }
        });

        btnAlteraQuantidade.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Modify.png"))); // NOI18N
        btnAlteraQuantidade.setText("Alterar Quantidade");
        btnAlteraQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAlteraQuantidadeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 598, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnAddProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAlteraQuantidade)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddProduto)
                    .addComponent(btnRemoveProduto)
                    .addComponent(btnAlteraQuantidade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel16.setBackground(java.awt.Color.blue);
        jLabel16.setText("Profissional:");

        txtNomeProfissional.setEditable(false);

        btnPesquisaProfissional.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/imagens/18x18/Search.png"))); // NOI18N
        btnPesquisaProfissional.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaProfissionalActionPerformed(evt);
            }
        });

        lblEspecialidade.setText("Especialidade:");

        jScrollPane4.setBorder(javax.swing.BorderFactory.createTitledBorder("Descrição da Ocorrência"));

        txtDescricaoOcorrencia.setColumns(20);
        txtDescricaoOcorrencia.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDescricaoOcorrencia.setRows(5);
        jScrollPane4.setViewportView(txtDescricaoOcorrencia);

        jPanel6.setBackground(new java.awt.Color(204, 204, 255));

        jLabel4.setText("Desconto:");

        txtDesconto.setBackground(new java.awt.Color(204, 204, 255));
        txtDesconto.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        txtDesconto.setForeground(new java.awt.Color(0, 204, 0));
        txtDesconto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtDesconto.setText("0,00");

        lblDiferenca.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lblDiferenca.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDiferenca.setText("000");

        txtValorOrdem.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        txtValorOrdem.setForeground(new java.awt.Color(0, 0, 255));
        txtValorOrdem.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        txtValorOrdem.setText("0,00");

        jLabel10.setText("Total:");

        jLabel5.setText("Diferença:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblDiferenca, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValorOrdem, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtValorOrdem)
                            .addComponent(lblDiferenca)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        lblEncerramento.setText("Encerramento: dd/MM/yyyy");

        lblFaturado.setText("Fatruado:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblEncerramento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblFaturado))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblEspecialidade, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtNomeProfissional)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPesquisaProfissional)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnServicos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(pnServicos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPesquisaProfissional)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel16)
                                .addComponent(txtNomeProfissional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEspecialidade)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEncerramento)
                            .addComponent(lblFaturado))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
        );

        jScrollPane2.setViewportView(jPanel2);

        lblIdOrdem.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblIdOrdem.setForeground(new java.awt.Color(0, 0, 255));
        lblIdOrdem.setText("Número: 000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblIdOrdem))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel44)
                                .addGap(8, 8, 8)
                                .addComponent(dtcDataDiagnostico, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel14)
                                .addGap(7, 7, 7)
                                .addComponent(txtCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPesquisaCliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbStatusNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(spnTempoGarantia, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbQuantidadeTempoGarantia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblIdOrdem)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel44)
                    .addComponent(dtcDataDiagnostico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisaCliente)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cmbStatusNota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3)
                        .addComponent(spnTempoGarantia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cmbQuantidadeTempoGarantia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaClienteActionPerformed
        FrmPesquisaCliente fpp =new FrmPesquisaCliente(null, rootPaneCheckingEnabled);
        fpp.setVisible(rootPaneCheckingEnabled);
        if (fpp.getCliente() != null)
        {
            this.cliente = fpp.getCliente();
            String formato = String.format("%s (id:%d) - doc:%s"
                    , this.cliente.getPessoa().getNome()
                    , this.cliente.getPessoa().getId()
                    , this.cliente.getPessoa().getCpf()
            );
            txtCliente.setText(formato);
        }
    }//GEN-LAST:event_btnPesquisaClienteActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        salvar();
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        editar();
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        excluir();
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnCancelarAcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarAcaoActionPerformed
        cancelar();
    }//GEN-LAST:event_btnCancelarAcaoActionPerformed

    private void btnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharActionPerformed
        fechar();
    }//GEN-LAST:event_btnFecharActionPerformed

    private void btnFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFichaActionPerformed
       
        HashMap map = new HashMap();
        map.put("ID_PACIENTE", cliente.getPessoa().getId());
        map.put("ID_TRA",ordemServico.getId());
        map.put("nome_cliente",cliente.getPessoa().getNome());
        System.out.println(ordemServico.getId());
        Relatorio relatorio = new Relatorio();
        relatorio.setRelName("rp_ordemServicos_ret.jasper");
        relatorio.setParams(map);
        relatorio.setConexao(Conexao.getConexao());
        
        relatorio.setIsExiteOnClose(false);
        Thread th = new Thread(relatorio);
        th.start();
        fechar();
    }//GEN-LAST:event_btnFichaActionPerformed

    private void btnLocalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocalizarActionPerformed
        localizar();
    }//GEN-LAST:event_btnLocalizarActionPerformed

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed
        novo();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnPesquisaProfissionalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaProfissionalActionPerformed
        // TODO add your handling code here:
        FrmPesquisaProfissional fpp =new FrmPesquisaProfissional(null, rootPaneCheckingEnabled);
        fpp.setVisible(rootPaneCheckingEnabled);
        if (fpp.getProfissional() != null)
        {
            this.profissional = fpp.getProfissional();
            txtNomeProfissional.setText(this.profissional.getPessoa().getNome());
            lblEspecialidade.setText("Especialidade: " + this.profissional.getProfissao());
        }
    }//GEN-LAST:event_btnPesquisaProfissionalActionPerformed

    private void btnAddProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddProdutoActionPerformed
        FrmPesquisaProduto fpp =new FrmPesquisaProduto(null, rootPaneCheckingEnabled);
        fpp.setVisible(rootPaneCheckingEnabled);
        if (fpp.getProduto() != null)
        {
            this.produtos.add(fpp.getProduto());
            Produto p = fpp.getProduto();
            
            for (int i=0;i< produtosOrdem.size();i++) {
                Object[] next = produtosOrdem.get(i);
                if (next[0].toString().equals(String.valueOf(p.getId()))){
                    //se houver um produto na lista então altera sua quantidade
                    next[2] = Integer.parseInt(next[2].toString()) + 1;
                    //atualiza o valor total
                    next[4] = NumberFormat.getCurrencyInstance().format(p.getPrecoVenda().multiply(new BigDecimal(next[2].toString())));
                    next[5] = fpp.getProduto();
                    loadProdutos();
                    atualizaValorOrdem();
                    return; //pois se não entra no de adição
                }//fim se igual id
            } //fim for
            //se não adiciona para a linha
            produtosOrdem.add(new Object[]{
                p.getId().toString()
                    ,p.getDescricao()
                    ,1
                    ,NumberFormat.getCurrencyInstance().format(p.getPrecoVenda().doubleValue())
                    ,NumberFormat.getCurrencyInstance().format(p.getPrecoVenda().doubleValue())
            });
            loadProdutos();
            atualizaValorOrdem();
        }
    }//GEN-LAST:event_btnAddProdutoActionPerformed

    private void btnAddServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddServicoActionPerformed
        FrmPesquisaServico fpp =new FrmPesquisaServico(null, rootPaneCheckingEnabled);
        fpp.setVisible(rootPaneCheckingEnabled);
        if (fpp.getServico() != null)
        {
            this.servicos.add(fpp.getServico());
            loadServicos();
            atualizaValorOrdem();
        }
        
    }//GEN-LAST:event_btnAddServicoActionPerformed

    private void btnFaturarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFaturarActionPerformed
        
        if (ShowMessage.confirmMessage("Tem certeza que deseja faturar esta ordem?") == 0){
            
            String desconto = "";
            try {
                desconto = ShowMessage.inputMessage("Digite o desconto:","0,00");
                txtDesconto.setText(desconto);
                valorDesconto = new BigDecimal(desconto);
                
                //calcula desconto
                valorOrdem = valorOrdem.subtract(valorDesconto);
                if (valorOrdem.doubleValue() <= 0.00){
                    ShowMessage.informationMessage("O valor do desconto não pode ser menor ou igual ao valor da ordem!");
                    return;
                } else {
                    atualizaValorOrdem();
                }
                
                
            } catch (NumberFormatException ex){
                ShowMessage.errorMessage(ex.getMessage());
                return;
            }
            
            controller.setObject(getDataForm());
            controller.getOrdemServico().setFaturado(true);
            controller.getOrdemServico().setStatus("CONCLUIDO");
            controller.getOrdemServico().setValor(valorOrdem);
            controller.getOrdemServico().setDesconto(valorDesconto);
            
            if (controller.update()){
                ShowMessage.informationMessage("Ordem de serviços faturada!");
                btnFaturar.setEnabled(false);
                setDataForm(controller.getOrdemServico());
            }
            enableForm(false);//desabilita o form
            enableControls(true);//desabilita controle
            btnSalvar.setEnabled(false);
            btnCancelarAcao.setEnabled(false);
        }
    }//GEN-LAST:event_btnFaturarActionPerformed

    private void cmbStatusNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStatusNotaActionPerformed
        //se ele cancelar a ordem tem que desfaturar!
//        int msg = ShowMessage.confirmMessage("Tem certeza que deseja cancelar esta ordem?");
//        if (msg == 0) {
//            controller.setObject(getDataForm());
//            controller.getOrdemServico().setFaturado(false);
//            if (controller.update()){
//                ShowMessage.warningMessage("Ordem de serviços cancelada!");
//                setDataForm(controller.findById(controller.getOrdemServico().getId()));
//                enableForm(false);//desabilita o form
//                enableControls(true);//desabilita controle
//                btnSalvar.setEnabled(false);
//                btnCancelarAcao.setEnabled(false);
//            }
//        }
        /**
         * NOTA: se o status da ordem é cancelado ou concluído, não pode ser
         * modificado os produtos e serviços.
         */
        String status = cmbStatusNota.getSelectedItem().toString();
        if (status.equals("CONCLUIDO") || status.equals("CANCELADO")){
            btnAddProduto.setVisible(false);
            btnAlteraQuantidade.setVisible(false);
            btnRemoveProduto.setVisible(false);
            btnAddServico.setVisible(false);
            btnRemoveServico.setVisible(false);
            
        } else {
            btnAddProduto.setVisible(true);
            btnAlteraQuantidade.setVisible(true);
            btnRemoveProduto.setVisible(true);
            btnAddServico.setVisible(true);
            btnRemoveServico.setVisible(true);
            
        }
    }//GEN-LAST:event_cmbStatusNotaActionPerformed

    private void btnRemoveServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveServicoActionPerformed
        int index = tblServicos.getRowSorter().convertRowIndexToModel(tblServicos.getSelectedRow());
        if (index >= 0){
            servicos.remove(index);
            loadServicos();
            atualizaValorOrdem();
        }
    }//GEN-LAST:event_btnRemoveServicoActionPerformed

    private void btnRemoveProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveProdutoActionPerformed
        int index = tblProdutos.getRowSorter().convertRowIndexToModel(tblProdutos.getSelectedRow());
        if (index >= 0){
            produtos.remove(index);
            produtosOrdem.remove(index);
            loadProdutos();
            atualizaValorOrdem();
        }
    }//GEN-LAST:event_btnRemoveProdutoActionPerformed

    private void btnAlteraQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAlteraQuantidadeActionPerformed
        int index = tblProdutos.getRowSorter().convertRowIndexToModel(tblProdutos.getSelectedRow());
        if (index >=0){
            String value = ShowMessage.inputMessage("Novo valor:");
            Object[] get = produtosOrdem.get(index);
            get[2] = value;
            BigDecimal valor = BigDecimal.ZERO;
            try {
                valor = new BigDecimal(NumberFormat.getCurrencyInstance().parse(String.valueOf(get[3])).doubleValue());
            } catch (ParseException ex) {
                Logger.getLogger(DlgOrdemServico.class.getName()).log(Level.SEVERE, null, ex);
            }
            BigDecimal qtd = new BigDecimal(value);
            
            get[4] = NumberFormat.getCurrencyInstance().format(valor.multiply(qtd));
            loadProdutos();
            atualizaValorOrdem();
        }
    }//GEN-LAST:event_btnAlteraQuantidadeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Windows Classic look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Windows Classic (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows Classic".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DlgOrdemServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DlgOrdemServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DlgOrdemServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DlgOrdemServico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DlgOrdemServico dialog = new DlgOrdemServico(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddProduto;
    private javax.swing.JButton btnAddServico;
    private javax.swing.JButton btnAlteraQuantidade;
    private javax.swing.JButton btnCancelarAcao;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnFaturar;
    private javax.swing.JButton btnFechar;
    private javax.swing.JButton btnFicha;
    private javax.swing.JButton btnLocalizar;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnPesquisaCliente;
    private javax.swing.JButton btnPesquisaProfissional;
    private javax.swing.JButton btnRemoveProduto;
    private javax.swing.JButton btnRemoveServico;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JComboBox cmbQuantidadeTempoGarantia;
    private javax.swing.JComboBox cmbStatusNota;
    private com.toedter.calendar.JDateChooser dtcDataDiagnostico;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel lblDiferenca;
    private javax.swing.JLabel lblEncerramento;
    private javax.swing.JLabel lblEspecialidade;
    private javax.swing.JLabel lblFaturado;
    private javax.swing.JLabel lblIdOrdem;
    private javax.swing.JPanel pnServicos;
    private javax.swing.JSpinner spnTempoGarantia;
    private javax.swing.JTable tblProdutos;
    private javax.swing.JTable tblServicos;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtDesconto;
    private javax.swing.JTextArea txtDescricaoOcorrencia;
    private javax.swing.JTextField txtNomeProfissional;
    private javax.swing.JLabel txtValorOrdem;
    // End of variables declaration//GEN-END:variables


    @Override
    public Object getDataForm() {
        
        ordemServico.setCliente(cliente); //cliente
        ordemServico.setProfissional(profissional);
        ordemServico.setAbertura(dtcDataDiagnostico.getDate());
        ordemServico.setStatus(String.valueOf(cmbStatusNota.getSelectedItem()));
        ordemServico.setTempoGarantia(Integer.parseInt(spnTempoGarantia.getValue().toString()));
        ordemServico.setQuantidadeTempoGarantia(String.valueOf(cmbQuantidadeTempoGarantia.getSelectedItem()));
        ordemServico.setDescricaoOcorrencia(txtDescricaoOcorrencia.getText());
        ordemServico.setValor(valorOrdem);
        
        ordemServico.setServicos(servicos);
        ordemServico.setProdutos(produtos);
        return ordemServico;
    }

    @Override
    public void setDataForm(Object objeto) {
        
        this.ordemServico = (OrdemServico) objeto;
        this.profissional = this.ordemServico.getProfissional();
        //produtos
        this.servicos = this.ordemServico.getServicos();
        loadServicos();
        this.produtos = this.ordemServico.getProdutos();
        loadProdutos();
        this.cliente = this.ordemServico.getCliente();
        dtcDataDiagnostico.setDate(ordemServico.getAbertura());
        String formato = String.format("%s (id:%d) - doc:%s"
                    , this.cliente.getPessoa().getNome()
                    , this.cliente.getPessoa().getId()
                    , this.cliente.getPessoa().getCpf()
            );
        txtCliente.setText(formato);
        txtNomeProfissional.setText(this.profissional.getPessoa().getNome());
        txtDescricaoOcorrencia.setText(ordemServico.getDescricaoOcorrencia());
        lblIdOrdem.setText("Número: " + String.valueOf(ordemServico.getId()));
        cmbStatusNota.setSelectedItem(ordemServico.getStatus());
        spnTempoGarantia.setValue(ordemServico.getTempoGarantia());
        cmbQuantidadeTempoGarantia.setSelectedItem(ordemServico.getQuantidadeTempoGarantia());
        valorDesconto = ordemServico.getDesconto();
        valorOrdem = ordemServico.getValor();
        
        atualizaValorOrdem();
        
        if (ordemServico.isFaturado())
            lblFaturado.setText("Faturado: SIM");
        else lblFaturado.setText("Faturado: NÃO"); 
        
        //data de encerramento conforme status
        if (ordemServico.getStatus().equals("CANCELADO") || ordemServico.getStatus().equals("CONCLUIDO"))
            lblEncerramento.setText("Encerramento: " + DataDefault.parseDataBrasil(ordemServico.getEncerramento()));
        else lblEncerramento.setText("Alterado em: " + DataDefault.parseDataBrasil(ordemServico.getEncerramento()));
        
        
    }
    
    //criado para habilitar em modo visualizar
    public void visualizar(){
        //habilit o boto de edição
        btnEditar.setEnabled(true);
        btnExcluir.setEnabled(true);
        IS_EDITAR = true;
//        btnCancelarAcao.setEnabled(true);
    }

    @Override
    public void salvar() {
        if(!validaForm()) return;
        
        try {
            controller.setObject(getDataForm());
            controller.setProdutosOrdem(produtosOrdem);
            controller.getOrdemServico().setEncerramento(new Date());
            if (IS_EDITAR){
                
                if(controller.update()){
                    setDataForm(controller.getOrdemServico());
                    ShowMessage.informationMessage("OrdemServico salva com sucesso!");
                }
                IS_EDITAR = true;
            } else {
                
                if(controller.save()){
                    setDataForm(controller.getOrdemServico());
                    ShowMessage.informationMessage("OrdemServico salva com sucesso!");
                }
                    
                IS_EDITAR = true;
            }
            
            enableForm(false);//desabilita o form
            enableControls(true);//desabilita controle
            btnSalvar.setEnabled(false);
            btnCancelarAcao.setEnabled(false);
        }catch (Exception ex){
            Log.log(DlgOrdemServico.class.getName(), ex);
        }
    }

    @Override
    public void novo() {
        IS_EDITAR = false;
        enableForm(true);   //habilita o formulário para adição
        enableControls(false);  //desabilita todos os controles
        // e habilita o que precisa
        btnSalvar.setEnabled(true);
        btnCancelarAcao.setEnabled(true);
        
        btnExcluir.setEnabled(false);
        setDataForm(new OrdemServico());
        
    }

    @Override
    public void fechar() {
        dispose();
    }

    @Override
    public void editar() {
        IS_EDITAR = true;
        enableForm(true);
        //desliga todos os controles e liga cancelar e salvar
        enableControls(false);
        btnFicha.setEnabled(true);
        btnSalvar.setEnabled(true);
        btnCancelarAcao.setEnabled(true);
//        btnAddDocumento.setEnabled(true);
//        btnVisualizar.setEnabled(true);
        btnExcluir.setEnabled(true);
    }

    @Override
    public void excluir() {
        int msg = ShowMessage.confirmMessage("Tem certeza que deseja excluir este registro?"
                + "\nA exclusão do mesmo pode afetar outros registros no sistema.");
        if (msg == 0){
            controller.setObject(getDataForm());
            if (controller.delete()){
                ShowMessage.informationMessage("O ordemServico foi excluido!");
//                cliente.getOrdemServicos().remove(ordemServico);
                dispose();
            }//fim delete
        }//fim msg==0
    }

    @Override
    public void localizar() {
        DlgPesquisaOrdemServico fpp =new DlgPesquisaOrdemServico(null, rootPaneCheckingEnabled);
        fpp.setVisible(rootPaneCheckingEnabled);
        if (fpp.getOrdemServico() != null)
        {
            setDataForm(fpp.getOrdemServico());
            enableControls(false);
            //se a ordem estiver concluida ou cancelada o botão editar fica desabilitado
            if (!ordemServico.getStatus().equals("CONCLUIDO") 
                    && !ordemServico.getStatus().equals("CANCELADO")){
                btnEditar.setEnabled(true);
            }
            btnExcluir.setEnabled(true);
            //se a nota não foi paga abilita o botão de faturar
            if (ordemServico.isFaturado()){
                btnFaturar.setEnabled(false);
            } else btnFaturar.setEnabled(true);
                IS_EDITAR = true;
        }
    }

    @Override
    public void enableControls(boolean bool) {
        btnSalvar.setEnabled(bool);
        btnEditar.setEnabled(bool);
        btnExcluir.setEnabled(bool);
        btnCancelarAcao.setEnabled(bool);
        btnFicha.setEnabled(bool);
        btnFaturar.setEnabled(bool);
    }

    @Override
    public void enableForm(boolean bool) {
        dtcDataDiagnostico.setEnabled(bool);
        btnAddServico.setEnabled(bool);
        btnRemoveServico.setEnabled(bool);
        btnPesquisaCliente.setEnabled(bool);
        btnPesquisaProfissional.setEnabled(bool);
        btnAddProduto.setEnabled(bool);
        btnRemoveProduto.setEnabled(bool);
        btnAlteraQuantidade.setEnabled(bool);
        txtDescricaoOcorrencia.setEditable(bool);
        spnTempoGarantia.setEnabled(bool);
        cmbQuantidadeTempoGarantia.setEnabled(bool);
        cmbStatusNota.setEnabled(bool);
    }
    
    public void visibleControls(boolean bool) {
        btnSalvar.setVisible(bool);
        btnEditar.setVisible(bool);
        btnExcluir.setVisible(bool);
        btnCancelarAcao.setVisible(bool);
        btnFicha.setVisible(bool);
        btnFaturar.setVisible(bool);
    }
    
    /**
     * Esconde e visualiza botões do sistema para usuário
     */
    @Override
    public void verPermissao(){
        visibleControls(false);
        Usuario usuario = Sessao.getInstance().getUsuario();
        //se ele puder tudo então fatura?
        if (usuario.getPermissaos(CasoUso.MANUTENCAO_ORDEMSERVICOS).size() == 4)
            btnFaturar.setVisible(true);
        else btnFaturar.setVisible(false);
        if (usuario.isAllowed(CasoUso.MANUTENCAO_ORDEMSERVICOS)){
            for (Permissao per : usuario.getPermissaos(CasoUso.MANUTENCAO_ORDEMSERVICOS)){
                switch(per){
                    case LER:
//                        btnVisualizar.setVisible(true);
                        btnFicha.setVisible(true);
                        break;
                    case CRIAR:
                        btnSalvar.setVisible(true);
//                        btnAddDocumento.setVisible(true);
                        btnCancelarAcao.setVisible(true);
                        break;
                    case EDITAR:
                        btnSalvar.setVisible(true);
                        btnEditar.setVisible(true);
                        btnCancelarAcao.setVisible(true);
                        break;
                    case EXCLUIR:
                        btnExcluir.setVisible(true);
                        btnCancelarAcao.setVisible(true);
                        break;
                }//fim switch
            } //fim for
        } else {
        }//fim se tiver permissão
    }

    private void cancelar() {
        enableForm(false);
        enableControls(false);
        if (IS_EDITAR) {
            btnEditar.setEnabled(true);
            btnExcluir.setEnabled(true);
        }
        btnFicha.setEnabled(true);
//        btnAddDocumento.setEnabled(false);
//        btnVisualizar.setEnabled(false);
        btnExcluir.setEnabled(false);
    }//fim cancelar

    public void setCliente(Cliente cliente){
        this.cliente = cliente;
    }
    
    public Cliente getCliente(){ return cliente; }

    public OrdemServico getOrdemServico() { return ordemServico; }

    private boolean validaForm() {
        //Validadores
        //se é orçamento
        if (cmbStatusNota.getSelectedIndex() == 0 && (cliente == null 
                || cliente.getPessoa().getId() == 0 )
            || (servicos.isEmpty())
            || (txtDescricaoOcorrencia.getText() == null || txtDescricaoOcorrencia.getText().isEmpty())
            || (dtcDataDiagnostico == null)
                ) {
            ShowMessage.warningMessage("Os campos em destaque não podem estr em branco!");
            dtcDataDiagnostico.setBackground(Color.magenta);
            txtCliente.setBackground(Color.MAGENTA);
            txtDescricaoOcorrencia.setBackground(Color.magenta);
            pnServicos.setBackground(Color.magenta);
            return false;
        } 
        //se ele não esta fazendo um orçamento
        else if ( (cliente == null 
                || cliente.getPessoa().getId() == 0 )
            || (profissional == null || profissional.getPessoa().getId() == 0)
            || (servicos.isEmpty())
            || (txtDescricaoOcorrencia.getText() == null || txtDescricaoOcorrencia.getText().isEmpty())
            || (dtcDataDiagnostico == null)
        ){//se não validar
            ShowMessage.warningMessage("Os campos em destaque não podem estr em branco!");
            dtcDataDiagnostico.setBackground(Color.magenta);
            txtCliente.setBackground(Color.MAGENTA);
            txtNomeProfissional.setBackground(Color.MAGENTA);
            txtDescricaoOcorrencia.setBackground(Color.magenta);
            pnServicos.setBackground(Color.magenta);
            return false;
        }//fim se não validar
        return true;
    }//fim validaForm
    
    private void atualizaValorOrdem(){
        valorOrdem = new BigDecimal(BigInteger.ZERO);
        //for em serviços
        for (Servico next : servicos) {
            valorOrdem = valorOrdem.add(next.getValor());
        } //fim loop
        //for em produtos
        for (Object[] next : produtosOrdem) {
            
            try {
                valorOrdem = valorOrdem.add(new BigDecimal(NumberFormat.getCurrencyInstance().parse(next[4].toString()).doubleValue()));
            } catch (ParseException ex) {
                Logger.getLogger(DlgOrdemServico.class.getName()).log(Level.SEVERE, null, ex);
            }
        } //fim loop
        txtValorOrdem.setText(NumberFormat.getCurrencyInstance().format(valorOrdem.doubleValue()));
        txtDesconto.setText(NumberFormat.getCurrencyInstance().format(valorDesconto.doubleValue()));
        //calcula porcentagem
        lblDiferenca.setText(NumberFormat.getCurrencyInstance().format(valorOrdem.subtract(valorDesconto).doubleValue()));
    }

    private void loadServicos() {
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("Id");dtm.addColumn("Serviço");dtm.addColumn("Valor");
        for (Iterator<Servico> iterator = servicos.iterator(); iterator.hasNext();) {
            Servico next = iterator.next();
            dtm.addRow(new Object[]{next.getId()
            ,next.getNome()
            ,NumberFormat.getCurrencyInstance().format(next.getValor())
            });
        }//fim loop
        tblServicos.setModel(dtm);
    }
    
    private void loadProdutos() {
        DefaultTableModel dtm = new DefaultTableModel();
        dtm.addColumn("Id");dtm.addColumn("Produto");dtm.addColumn("Qtd");
        dtm.addColumn("Unitário");dtm.addColumn("Total");
        for (Object[] next : produtosOrdem) {
            dtm.addRow(next);
        } //fim loop
        tblProdutos.setModel(dtm);
    }
}//fim classe